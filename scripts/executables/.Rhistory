print("Ellipses done !")
source("../functions_R/figure_tools.R")
#####################
sims.dirs <- list.dirs("../../simul/fig_3/raster_map3/0pi")
sims.dir  <- sims.dirs[2:length(sims.dirs)]
of        <- "round_s"
what      <- "angle" #"angle" or "ecc"
where     <- "wagner"
#####################
pdfname   <- print(sprintf("../../figures/%s/%s_ellipse.pdf", where, of))
#pdfname   <- print(sprintf("test.pdf", where, of))
M.factor <- 20
#G.factor <- 0.6
G.factor <- 1
S.factor <- 0.02 #Multilinear
#S.factor <- 0.01 #Multilinear scaled 0_1
#S.factor <- 0.0008 #Wagner
#S.factor <- 0.01
#Draw ellipses
pdf(pdfname, width=11, height=5)
layout(t(1:3))
for (dd in sims.dir) {
print(dd)
# plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, main=dd ,xlim=c(-2,0), ylim=c(-2,0), Gell = FALSE)#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, Gell=FALSE, main=dd ,xlim=c(-3,3), ylim=c(-3,3), all.reps=TRUE, pattern = "FITNESS_OPTIMUM--1-FITNESS_OPTIMUM2-0.5.^.txt$" )#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
# plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, main=dd ,xlim=c(-3,3), ylim=c(-3,3), all.gen=TRUE)#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
}
dev.off()
print("Ellipses done !")
sims.dir
#####################
sims.dirs <- list.dirs("../../simul/fig_3/raster_map3/0pi")
# sims.dir  <- sims.dirs[2:length(sims.dirs)]
sims.dir  <- sims.dirs
of        <- "round_s"
what      <- "angle" #"angle" or "ecc"
where     <- "wagner"
#####################
pdfname   <- print(sprintf("../../figures/%s/%s_ellipse.pdf", where, of))
#pdfname   <- print(sprintf("test.pdf", where, of))
M.factor <- 20
#G.factor <- 0.6
G.factor <- 1
S.factor <- 0.02 #Multilinear
#S.factor <- 0.01 #Multilinear scaled 0_1
#S.factor <- 0.0008 #Wagner
#S.factor <- 0.01
#Draw ellipses
pdf(pdfname, width=11, height=5)
layout(t(1:3))
for (dd in sims.dir) {
print(dd)
# plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, main=dd ,xlim=c(-2,0), ylim=c(-2,0), Gell = FALSE)#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, Gell=FALSE, main=dd ,xlim=c(-3,3), ylim=c(-3,3), all.reps=TRUE, pattern = "FITNESS_OPTIMUM--1-FITNESS_OPTIMUM2-0.5.^.txt$" )#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
# plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, main=dd ,xlim=c(-3,3), ylim=c(-3,3), all.gen=TRUE)#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
}
dev.off()
print("Ellipses done !")
source("../functions_R/figure_tools.R")
sims.dirs <- list.dirs("../../simul/fig_3/raster_map3/0pi")
# sims.dir  <- sims.dirs[2:length(sims.dirs)]
sims.dir  <- sims.dirs
of        <- "round_s"
what      <- "angle" #"angle" or "ecc"
where     <- "wagner"
#####################
pdfname   <- print(sprintf("../../figures/%s/%s_ellipse.pdf", where, of))
#pdfname   <- print(sprintf("test.pdf", where, of))
M.factor <- 20
#G.factor <- 0.6
G.factor <- 1
S.factor <- 0.02 #Multilinear
#S.factor <- 0.01 #Multilinear scaled 0_1
#S.factor <- 0.0008 #Wagner
#S.factor <- 0.01
for (dd in sims.dir) {
print(dd)
# plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, main=dd ,xlim=c(-2,0), ylim=c(-2,0), Gell = FALSE)#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, Gell=FALSE, main=dd ,xlim=c(-3,3), ylim=c(-3,3), all.reps=TRUE, pattern_simu = "FITNESS_OPTIMUM--1-FITNESS_OPTIMUM2-0.5.^.txt$" )#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
# plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, main=dd ,xlim=c(-3,3), ylim=c(-3,3), all.gen=TRUE)#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
}
source("../functions_R/figure_tools.R")
for (dd in sims.dir) {
print(dd)
# plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, main=dd ,xlim=c(-2,0), ylim=c(-2,0), Gell = FALSE)#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, Gell=FALSE, main=dd ,xlim=c(-3,3), ylim=c(-3,3), all.reps=TRUE, pattern_simu = "FITNESS_OPTIMUM--1-FITNESS_OPTIMUM2-0.5.^.txt$" )#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
# plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, main=dd ,xlim=c(-3,3), ylim=c(-3,3), all.gen=TRUE)#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
}
list.files(path=data.dir, pattern=pattern_simu, full.names=TRUE)
list.files(path=data.dir, pattern="\\.txt$", full.names=TRUE)
list.files(path=data.dir, pattern="FITNESS_OPTIMUM--1-FITNESS_OPTIMUM2-0.5.^.txt$", full.names=TRUE)
for (dd in sims.dir) {
print(dd)
# plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, main=dd ,xlim=c(-2,0), ylim=c(-2,0), Gell = FALSE)#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, Gell=FALSE, main=dd ,xlim=c(-3,3), ylim=c(-3,3), all.reps=TRUE, pattern_simu = "FITNESS_OPTIMUM--1-FITNESS_OPTIMUM2-0.5_.^.txt$" )#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
# plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, main=dd ,xlim=c(-3,3), ylim=c(-3,3), all.gen=TRUE)#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
}
source("../functions_R/figure_tools.R")
for (dd in sims.dir) {
print(dd)
# plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, main=dd ,xlim=c(-2,0), ylim=c(-2,0), Gell = FALSE)#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, Gell=FALSE, main=dd ,xlim=c(-3,3), ylim=c(-3,3), all.reps=TRUE, pattern_simu = "FITNESS_OPTIMUM--1-FITNESS_OPTIMUM2-0.5_.^.txt$" )#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
# plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, main=dd ,xlim=c(-3,3), ylim=c(-3,3), all.gen=TRUE)#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
}
for (dd in sims.dir) {
print(dd)
# plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, main=dd ,xlim=c(-2,0), ylim=c(-2,0), Gell = FALSE)#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, Gell=FALSE, main=dd ,xlim=c(-3,3), ylim=c(-3,3), all.reps=TRUE, pattern_simu = "FITNESS_OPTIMUM--1-FITNESS_OPTIMUM2-0.5.*.txt$" )#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
# plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, main=dd ,xlim=c(-3,3), ylim=c(-3,3), all.gen=TRUE)#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
}
for (dd in sims.dir) {
print(dd)
# plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, main=dd ,xlim=c(-2,0), ylim=c(-2,0), Gell = FALSE)#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, Gell=FALSE, main=dd ,xlim=c(-3,3), ylim=c(-3,3), all.reps=TRUE, pattern_simu = "FITNESS_OPTIMUM-0.5-FITNESS_OPTIMUM2--1.*.txt$" )#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
# plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, main=dd ,xlim=c(-3,3), ylim=c(-3,3), all.gen=TRUE)#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
}
for (dd in sims.dir) {
print(dd)
# plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, main=dd ,xlim=c(-2,0), ylim=c(-2,0), Gell = FALSE)#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, Gell=FALSE, main=dd ,xlim=c(-3,3), ylim=c(-3,3), all.reps=FALSE, pattern_simu = "FITNESS_OPTIMUM-0.5-FITNESS_OPTIMUM2--1.*.txt$" )#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
# plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, main=dd ,xlim=c(-3,3), ylim=c(-3,3), all.gen=TRUE)#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
}
for (dd in sims.dir) {
print(dd)
# plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, main=dd ,xlim=c(-2,0), ylim=c(-2,0), Gell = FALSE)#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, Gell=FALSE, main=dd ,xlim=c(-3,3), ylim=c(-3,3), all.reps=FALSE, pattern_simu = "FITNESS_OPTIMUM-0.5-FITNESS_OPTIMUM2--1.*.txt$" )#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, Gell=FALSE, main=dd ,xlim=c(-3,3), ylim=c(-3,3), all.reps=FALSE, pattern_simu = "FITNESS_OPTIMUM--1-FITNESS_OPTIMUM2-0.5.*.txt$" )
# plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, main=dd ,xlim=c(-3,3), ylim=c(-3,3), all.gen=TRUE)#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
}
for (dd in sims.dir) {
print(dd)
# plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, main=dd ,xlim=c(-2,0), ylim=c(-2,0), Gell = FALSE)#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, Gell=FALSE, main=dd ,xlim=c(-3,3), ylim=c(-3,3), all.reps=FALSE, pattern_simu = "FITNESS_OPTIMUM-0.5-FITNESS_OPTIMUM2--1.*.txt$" )#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, Gell=FALSE, main=dd ,xlim=c(-3,3), ylim=c(-3,3), all.reps=FALSE, pattern_simu = "FITNESS_OPTIMUM--1-FITNESS_OPTIMUM2-0.5.*.txt$" )
# plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, main=dd ,xlim=c(-3,3), ylim=c(-3,3), all.gen=TRUE)#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
}
# plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, main=dd ,xlim=c(-2,0), ylim=c(-2,0), Gell = FALSE)#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, Gell=FALSE, main=dd ,xlim=c(-3,3), ylim=c(-3,3), all.reps=FALSE)
sims.dirs <- c(
"../../simul/fig_3/raster_map3/0pi", "../../simul/fig_3/raster_map2/0pi",
"../../simul/fig_3/raster_map2/-pi_4",  "../../simul/fig_3/raster_map2/pi_4",
"../../simul/fig_3/raster_map2/-3pi_8","../../simul/fig_3/raster_map2/3pi_8","../../simul/fig_3/raster_map2/pi_8",
"../../simul/fig_3/raster_map2/-pi_8",  "../../simul/fig_3/raster_map3/-pi_4" ,
"../../simul/fig_3/raster_map3/pi_4","../../simul/fig_3/raster_map3/-3pi_8","../../simul/fig_3/raster_map3/3pi_8",
"../../simul/fig_3/raster_map3/pi_8","../../simul/fig_3/raster_map3/-pi_8"
)
of        <- "fig3"
modulo <- pi
#####################
df.all <- data.frame(NULL)
for (i in sims.dirs) {
df <- df.raster.map(i, modulo=modulo)
pop <- str_split(i, "../../simul/fig_3/raster_map", n=2, simplify = TRUE)
df[,8] <- sprintf("%s", pop[,2])
df.all <- rbind(df.all, df)
}
# pdfname   <- print(sprintf("../../figures/%s_expression_map.pdf", of))
# pdf(pdfname, width=5, height=5)
ggplot(df.all, aes(x=P_mean_A, y=P_mean_B, z=sq_dist))+
coord_fixed(ratio = 1, xlim = c(-1.25,1.25), ylim = c(-1.25,1.25), expand = TRUE, clip = "on")+
stat_summary_2d(breaks = c(-1.25,-0.75, -0.25, 0.25, 0.75, 1.25), fun = "mean")+
scale_fill_viridis_c(option = "magma")+
labs(title = ("Mean M - S angle square distance for different optimum phenotypes"), x="Expression gene A", y="Expression gene B")+
labs(fill = "Mean square distance")
# geom_point()+
for (dd in sims.dir) {
print(dd)
# plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, main=dd ,xlim=c(-2,0), ylim=c(-2,0), Gell = FALSE)#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, Gell=FALSE, main=dd ,xlim=c(-3,3), ylim=c(-3,3), all.reps=FALSE)
plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, Gell=FALSE, main=dd ,xlim=c(-3,3), ylim=c(-3,3), all.reps=FALSE, pattern_simu = "FITNESS_OPTIMUM-0-FITNESS_OPTIMUM2--1.*.txt$" )#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, Gell=FALSE, main=dd ,xlim=c(-3,3), ylim=c(-3,3), all.reps=FALSE, pattern_simu = "FITNESS_OPTIMUM--1-FITNESS_OPTIMUM2-0.*.txt$" )
# plot.ellipse.dir(dd, S.factor=S.factor, M.factor=M.factor, G.factor=G.factor, main=dd ,xlim=c(-3,3), ylim=c(-3,3), all.gen=TRUE)#xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
}
########################################################################################################################
sims.dirs <- c(
"../../simul/fig_3/raster_map3/0pi", "../../simul/fig_3/raster_map2/0pi",
"../../simul/fig_3/raster_map2/-pi_4",  "../../simul/fig_3/raster_map2/pi_4",
"../../simul/fig_3/raster_map2/-3pi_8","../../simul/fig_3/raster_map2/3pi_8","../../simul/fig_3/raster_map2/pi_8",
"../../simul/fig_3/raster_map2/-pi_8",  "../../simul/fig_3/raster_map3/-pi_4" ,
"../../simul/fig_3/raster_map3/pi_4","../../simul/fig_3/raster_map3/-3pi_8","../../simul/fig_3/raster_map3/3pi_8",
"../../simul/fig_3/raster_map3/pi_8","../../simul/fig_3/raster_map3/-pi_8"
)
of        <- "fig3"
modulo <- pi
#####################
df.all <- data.frame(NULL)
for (i in sims.dirs) {
df <- df.raster.map(i, modulo=modulo)
pop <- str_split(i, "../../simul/fig_3/raster_map", n=2, simplify = TRUE)
df[,8] <- sprintf("%s", pop[,2])
df.all <- rbind(df.all, df)
}
# pdfname   <- print(sprintf("../../figures/%s_expression_map.pdf", of))
# pdf(pdfname, width=5, height=5)
ggplot(df.all, aes(x=P_mean_A, y=P_mean_B, z=sq_dist))+
coord_fixed(ratio = 1, xlim = c(-1.25,1.25), ylim = c(-1.25,1.25), expand = TRUE, clip = "on")+
stat_summary_2d(breaks = c(-1.25,-0.75, -0.25, 0.25, 0.75, 1.25), fun = "mean")+
scale_fill_viridis_c(option = "magma")+
labs(title = ("Mean M - S angle square distance for different optimum phenotypes"), x="Expression gene A", y="Expression gene B")+
labs(fill = "Mean square distance")
# geom_point()+
dev.off()
source("../functions_R/network.R")
source("../functions_R/tools.R")
library(ggplot2)
library(ggExtra)
library(grid)
library(gridExtra)
library(ggstance)
library(gtable)
library(scales)
########################################################################################################################
sims.dirs <- c(
"../../simul/fig_3/raster_map3/0pi", "../../simul/fig_3/raster_map2/0pi",
"../../simul/fig_3/raster_map2/-pi_4",  "../../simul/fig_3/raster_map2/pi_4",
"../../simul/fig_3/raster_map2/-3pi_8","../../simul/fig_3/raster_map2/3pi_8","../../simul/fig_3/raster_map2/pi_8",
"../../simul/fig_3/raster_map2/-pi_8",  "../../simul/fig_3/raster_map3/-pi_4" ,
"../../simul/fig_3/raster_map3/pi_4","../../simul/fig_3/raster_map3/-3pi_8","../../simul/fig_3/raster_map3/3pi_8",
"../../simul/fig_3/raster_map3/pi_8","../../simul/fig_3/raster_map3/-pi_8"
)
of        <- "fig3"
modulo <- pi
df.all <- data.frame(NULL)
for (i in sims.dirs) {
df <- df.raster.map(i, modulo=modulo)
pop <- str_split(i, "../../simul/fig_3/raster_map", n=2, simplify = TRUE)
df[,8] <- sprintf("%s", pop[,2])
df.all <- rbind(df.all, df)
}
pdfname   <- print(sprintf("../../figures/%s_expression_map.pdf", of))
pdf(pdfname, width=5, height=5)
ggplot(df.all, aes(x=P_mean_A, y=P_mean_B, z=sq_dist))+
coord_fixed(ratio = 1, xlim = c(-1.25,1.25), ylim = c(-1.25,1.25), expand = TRUE, clip = "on")+
stat_summary_2d(breaks = c(-1.25,-0.75, -0.25, 0.25, 0.75, 1.25), fun = "mean")+
scale_fill_viridis_c(option = "magma")+
labs(title = ("Mean M - S angle square distance for different optimum phenotypes"), x="Expression gene A", y="Expression gene B")+
labs(fill = "Mean square distance")
# geom_point()+
dev.off()
#####################
sims.dirs <- c("../../simul/fig_1/w2","../../simul/fig_1/m_2000")
#angle = c(-0.2, 1.2)
angle = c(1,2,3) #c(-1.4, -1.3, -1.2 , -1.1, -1.0, -0.9, -0.8, -0.7, -0.6, -0.5, -0.4, -0.3, -0.2, -0.1, 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4)
of        <- "fig1_modulopi"
modulo <- pi
#####################
df.all <- data.frame(NULL)
for (i in sims.dirs) {
df <- df.raster.map(i, modulo=modulo)
pop <- str_split(i, "../../simul/fig_1/", n=2, simplify = TRUE)
df[,8] <- sprintf("%s", pop[,2])
df.all <- rbind(df.all, df)
}
#####################
sims.dirs <- c("../../simul/fig_1/w2","../../simul/fig_1/m_2000")
#angle = c(-0.2, 1.2)
angle = c(1,2,3) #c(-1.4, -1.3, -1.2 , -1.1, -1.0, -0.9, -0.8, -0.7, -0.6, -0.5, -0.4, -0.3, -0.2, -0.1, 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4)
of        <- "fig1_modulopi"
modulo <- pi
#####################
df.all <- data.frame(NULL)
for (i in sims.dirs) {
sims.dir <- list.dirs(i)[2:length(list.dirs(i))]
df <- df.raster.map(i, modulo=modulo)
pop <- str_split(i, "../../simul/fig_1/", n=2, simplify = TRUE)
df[,8] <- sprintf("%s", pop[,2])
df.all <- rbind(df.all, df)
}
sims.dirs <- c("../../simul/fig_1/m_2000")
#angle = c(-0.2, 1.2)
angle = c(1,2,3) #c(-1.4, -1.3, -1.2 , -1.1, -1.0, -0.9, -0.8, -0.7, -0.6, -0.5, -0.4, -0.3, -0.2, -0.1, 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4)
of        <- "fig1_modulopi"
modulo <- pi
#####################
df.all <- data.frame(NULL)
for (i in sims.dirs) {
sims.dir <- list.dirs(i)[2:length(list.dirs(i))]
df <- df.raster.map(i, modulo=modulo)
pop <- str_split(i, "../../simul/fig_1/", n=2, simplify = TRUE)
df[,8] <- sprintf("%s", pop[,2])
df.all <- rbind(df.all, df)
}
sims.dirs <- c("../../simul/fig_1/m_2000")
#angle = c(-0.2, 1.2)
angle = c(1,2,3) #c(-1.4, -1.3, -1.2 , -1.1, -1.0, -0.9, -0.8, -0.7, -0.6, -0.5, -0.4, -0.3, -0.2, -0.1, 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4)
of        <- "fig1_modulopi"
modulo <- pi
#####################
df.all <- data.frame(NULL)
sims.dir <- list.dirs(i)[2:length(list.dirs(i))]
for (i in sims.dir) {
df <- df.raster.map(i, modulo=modulo)
pop <- str_split(i, "../../simul/fig_1/", n=2, simplify = TRUE)
df[,8] <- sprintf("%s", pop[,2])
df.all <- rbind(df.all, df)
}
View(df.all)
mean(df.all$sq_dist)
sims.dir <- list.dirs(i)[2:length(list.dirs(i))]
for (i in sims.dir) {
df <- df.raster.map(i, modulo=modulo)
pop <- str_split(i, "../../simul/fig_1/", n=2, simplify = TRUE)
df[,8] <- sprintf("%s", pop[,2])
df[,9] <- (df$ang_M-df$ang_S)
df.all <- rbind(df.all, df)
}
sims.dirs <- c("../../simul/fig_1/m_2000")
#angle = c(-0.2, 1.2)
angle = c(1,2,3) #c(-1.4, -1.3, -1.2 , -1.1, -1.0, -0.9, -0.8, -0.7, -0.6, -0.5, -0.4, -0.3, -0.2, -0.1, 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4)
of        <- "fig1_modulopi"
modulo <- pi
#####################
df.all <- data.frame(NULL)
sims.dir <- list.dirs(i)[2:length(list.dirs(i))]
for (i in sims.dir) {
df <- df.raster.map(i, modulo=modulo)
pop <- str_split(i, "../../simul/fig_1/", n=2, simplify = TRUE)
df[,8] <- sprintf("%s", pop[,2])
df[,9] <- (df$ang_M-df$ang_S)
df.all <- rbind(df.all, df)
}
sims.dirs <- c("../../simul/fig_1/m_2000")
#angle = c(-0.2, 1.2)
angle = c(1,2,3) #c(-1.4, -1.3, -1.2 , -1.1, -1.0, -0.9, -0.8, -0.7, -0.6, -0.5, -0.4, -0.3, -0.2, -0.1, 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4)
of        <- "fig1_modulopi"
modulo <- pi
#####################
df.all <- data.frame(NULL)
sims.dir <- list.dirs(i)[2:length(list.dirs(i))]
sims.dirs <- c("../../simul/fig_1/m_2000")
#angle = c(-0.2, 1.2)
angle = c(1,2,3) #c(-1.4, -1.3, -1.2 , -1.1, -1.0, -0.9, -0.8, -0.7, -0.6, -0.5, -0.4, -0.3, -0.2, -0.1, 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4)
of        <- "fig1_modulopi"
modulo <- pi
#####################
df.all <- data.frame(NULL)
sims.dir <- list.dirs(sims.dirs)[2:length(list.dirs(sims.dirs))]
for (i in sims.dir) {
df <- df.raster.map(i, modulo=modulo)
pop <- str_split(i, "../../simul/fig_1/", n=2, simplify = TRUE)
df[,8] <- sprintf("%s", pop[,2])
df[,9] <- (df$ang_M-df$ang_S)
df.all <- rbind(df.all, df)
}
View(df.all)
sims.dir <- list.dirs(sims.dirs)[2:length(list.dirs(sims.dirs))]
for (i in sims.dir) {
df <- df.raster.map(i, modulo=modulo)
pop <- str_split(i, "../../simul/fig_1/", n=2, simplify = TRUE)
df[,8] <- sprintf("%s", pop[,2])
df[,9] <- (df$ang_M-df$ang_S)
df[10] <- modulo.all(df$V9, modulo=pi)
df.all <- rbind(df.all, df)
}
sims.dirs <- c("../../simul/fig_1/m_2000")
#angle = c(-0.2, 1.2)
angle = c(1,2,3) #c(-1.4, -1.3, -1.2 , -1.1, -1.0, -0.9, -0.8, -0.7, -0.6, -0.5, -0.4, -0.3, -0.2, -0.1, 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4)
of        <- "fig1_modulopi"
modulo <- pi
#####################
df.all <- data.frame(NULL)
sims.dir <- list.dirs(sims.dirs)[2:length(list.dirs(sims.dirs))]
for (i in sims.dir) {
df <- df.raster.map(i, modulo=modulo)
pop <- str_split(i, "../../simul/fig_1/", n=2, simplify = TRUE)
df[,8] <- sprintf("%s", pop[,2])
df[,9] <- (df$ang_M-df$ang_S)
df[10] <- modulo.all(df[,9], modulo=pi)
df.all <- rbind(df.all, df)
}
View(df.all)
sims.dirs <- c("../../simul/fig_1/m_2000")
#angle = c(-0.2, 1.2)
angle = c(1,2,3) #c(-1.4, -1.3, -1.2 , -1.1, -1.0, -0.9, -0.8, -0.7, -0.6, -0.5, -0.4, -0.3, -0.2, -0.1, 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4)
of        <- "fig1_modulopi"
modulo <- pi
#####################
df.all <- data.frame(NULL)
sims.dir <- list.dirs(sims.dirs)[2:length(list.dirs(sims.dirs))]
for (i in sims.dir) {
df <- df.raster.map(i, modulo=modulo)
pop <- str_split(i, "../../simul/fig_1/", n=2, simplify = TRUE)
df[,8] <- sprintf("%s", pop[,2])
df[,9] <- (df$ang_M-df$ang_S)
df[10] <- modulo.all(df[,9], modulo=pi)
df[11] <- df[,10]^2
df.all <- rbind(df.all, df)
}
View(df.all)
View(df)
View(df)
a <- 1.570796
b <- -0.03332000
modulo.all(a-b, modulo=pi)
a <- 1.570796
b <- 0.03332000
modulo.all(a-b, modulo=pi)
a <- -1.570796
b <- -0.03332000
modulo.all(a-b, modulo=pi)
a <- -1.570796
b <- 0.03332000
modulo.all(a-b, modulo=pi)
########################################################################################################################
sims.dirs <- c(
"../../simul/fig_3/raster_map3/0pi", "../../simul/fig_3/raster_map2/0pi"
# "../../simul/fig_3/raster_map2/-pi_4",  "../../simul/fig_3/raster_map2/pi_4",
# "../../simul/fig_3/raster_map2/-3pi_8","../../simul/fig_3/raster_map2/3pi_8","../../simul/fig_3/raster_map2/pi_8",
# "../../simul/fig_3/raster_map2/-pi_8",  "../../simul/fig_3/raster_map3/-pi_4" ,
# "../../simul/fig_3/raster_map3/pi_4","../../simul/fig_3/raster_map3/-3pi_8","../../simul/fig_3/raster_map3/3pi_8",
# "../../simul/fig_3/raster_map3/pi_8","../../simul/fig_3/raster_map3/-pi_8"
)
of        <- "fig3"
modulo <- pi
#####################
df.all <- data.frame(NULL)
for (i in sims.dirs) {
df <- df.raster.map(i, modulo=modulo)
pop <- str_split(i, "../../simul/fig_3/raster_map", n=2, simplify = TRUE)
df[,8] <- sprintf("%s", pop[,2])
df.all <- rbind(df.all, df)
}
View(df.all)
sims.dirs <- c("../../simul/fig_1/w2")
#angle = c(-0.2, 1.2)
angle = c(1,2,3) #c(-1.4, -1.3, -1.2 , -1.1, -1.0, -0.9, -0.8, -0.7, -0.6, -0.5, -0.4, -0.3, -0.2, -0.1, 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4)
of        <- "fig1_modulopi"
modulo <- pi
#####################
df.all <- data.frame(NULL)
sims.dir <- list.dirs(sims.dirs)[2:length(list.dirs(sims.dirs))]
for (i in sims.dir) {
df <- df.raster.map(i, modulo=modulo)
pop <- str_split(i, "../../simul/fig_1/", n=2, simplify = TRUE)
df[,8] <- sprintf("%s", pop[,2])
df[,9] <- (df$ang_M-df$ang_S)
df[10] <- modulo.all(df[,9], modulo=pi)
df[11] <- df[,10]^2
df.all <- rbind(df.all, df)
}
View(df.all)
View(df)
sims.dirs <- c("../../simul/fig_1/w2")
#angle = c(-0.2, 1.2)
angle = c(1,2,3) #c(-1.4, -1.3, -1.2 , -1.1, -1.0, -0.9, -0.8, -0.7, -0.6, -0.5, -0.4, -0.3, -0.2, -0.1, 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4)
of        <- "fig1_modulopi"
modulo <- pi
#####################
df.all <- data.frame(NULL)
sims.dir <- list.dirs(sims.dirs)[2:length(list.dirs(sims.dirs))]
for (i in sims.dir) {
df <- df.raster.map(i, modulo=modulo)
pop <- str_split(i, "../../simul/fig_1/", n=2, simplify = TRUE)
df[,8] <- sprintf("%s", pop[,2])
df[,9] <- (df$ang_M-df$ang_S)
df[10] <- modulo.all(df[,9], modulo=pi)
df[11] <- df[,10]^2
df.all <- rbind(df.all, df)
}
View(df)
source("../functions_R/figure_tools.R")
#####################
sims.dirs <- list.dirs("../../simul/fig_1")
#angle = c(-0.2, 1.2)
angle = c(1,2,3) #c(-1.4, -1.3, -1.2 , -1.1, -1.0, -0.9, -0.8, -0.7, -0.6, -0.5, -0.4, -0.3, -0.2, -0.1, 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4)
of        <- "fig1_modulopi"
modulo <- pi
#####################
M.factor <- 500
G.factor <- 0.25
#S.factor <- 0.022 #Multilinear
#S.factor <- 0.01 #Multilinear scaled 0_1
#S.factor <- 0.0008 #Wagner
S.factor <- 1
# pdfname   <- print(sprintf("../../figures/%s_ellipse.pdf", of))
# #Draw ellipses
# pdf(pdfname, width=13, height=4.4)
# layout(t(1:3))
j <- 1
for (i in angle) {
j <- j+1
sims.dirs.w <- list.dirs("../../simul/fig_1/w2")
sims.dir.w <- sims.dirs.w[j]
mse.w <- round(mse.ms(diff.ms.df(sims.dir.w, modulo=modulo)), 4)
sims.dirs.m <- list.dirs("../../simul/fig_1/m_2000")
sims.dir.m <- sims.dirs.m[j]
mse.m <- round(mse.ms(diff.ms.df(sims.dir.m, modulo=modulo)), 4)
sims.dir  <- list.files(path=sims.dirs, pattern=sprintf("angle__%s.par", i), full.names=TRUE)
# oneplot.allellipse(sims.dir, G.factor=G.factor, S.factor=S.factor, M.factor=M.factor,asp=1, main=sprintf("MSE m = %s MSE w = %s", mse.m, mse.w),xlim=c(-0.5,0.5), ylim=c(-0.5,0.5), all.reps=TRUE, Gell=FALSE) #xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
oneplot.allellipse(sims.dir, G.factor=G.factor, S.factor=S.factor, M.factor=M.factor,asp=1, main=sprintf("rho² m = %s w = %s", mse.m, mse.w),xlim=c(-7,7), ylim=c(-7,7), all.reps=FALSE)
}
# dev.off()
print("Ellipses done !")
pdfname   <- print(sprintf("../../figures/%s_ellipse.pdf", of))
# #Draw ellipses
pdf(pdfname, width=13, height=4.4)
layout(t(1:3))
j <- 1
for (i in angle) {
j <- j+1
sims.dirs.w <- list.dirs("../../simul/fig_1/w2")
sims.dir.w <- sims.dirs.w[j]
mse.w <- round(mse.ms(diff.ms.df(sims.dir.w, modulo=modulo)), 4)
sims.dirs.m <- list.dirs("../../simul/fig_1/m_2000")
sims.dir.m <- sims.dirs.m[j]
mse.m <- round(mse.ms(diff.ms.df(sims.dir.m, modulo=modulo)), 4)
sims.dir  <- list.files(path=sims.dirs, pattern=sprintf("angle__%s.par", i), full.names=TRUE)
# oneplot.allellipse(sims.dir, G.factor=G.factor, S.factor=S.factor, M.factor=M.factor,asp=1, main=sprintf("MSE m = %s MSE w = %s", mse.m, mse.w),xlim=c(-0.5,0.5), ylim=c(-0.5,0.5), all.reps=TRUE, Gell=FALSE) #xlim=c(-3,3), ylim=c(-3,3) all.gen=TRUE all.reps=TRUE
oneplot.allellipse(sims.dir, G.factor=G.factor, S.factor=S.factor, M.factor=M.factor,asp=1, main=sprintf("rho² m = %s w = %s", mse.m, mse.w),xlim=c(-7,7), ylim=c(-7,7), all.reps=FALSE)
}
dev.off()
print("Ellipses done !")
