}
}
#Properties of S:
def.e <- 0.12 #eccentricity
def.s <- 10 #size
##This loop creates a parameter template for each angle given.
values <- list(-3*pi/8, -pi/4, -pi/8, 0, pi/8, pi/4, 3*pi/8, pi/2-0.001)
for (i in sims.dirs) {
param.template = file.path(i, "nextpar.temp")
for (a in values) {
param.file <- file.path(i, sprintf("nextpar%s.temp", round(a, digits=1)))
new.dir<- str_split(param.file, "nextpar", n=2, simplify = TRUE)
param.from.sel.features(param.template, param.file, angle=a, size=def.s, eccentricity=def.e)
file.rename(from=param.file, to=sprintf("%s/%s", i, sprintf("nextpar%s.par", round(a, digits=1))))
}
}
###############################
#Fisrt evolutionary phase : getting to the optimum
#Properties of S:
def.e <- 1 #1 #eccentricity
for (sims.dir in sims.dirs) {
param.template = file.path(sims.dir, "template.temp")
param.file <- file.path(sims.dir, sprintf("templateangle%s.temp", round(a, digits=3)))
param.from.sel.features(param.template, param.file, angle=0, size=def.s, eccentricity=def.e)
file.rename(from=param.file, to=sprintf("%s/%s",sims.dir, sprintf("templateangle%s.temp", 0)))
}
##This loop creates a parameter file for each optimums
for (i in sims.dirs) {
templist <- list.files(path=i, pattern='templateangle.*\\.temp', full.names = TRUE)
nextpar <- list.files(path=i, pattern='nextpar.*\\.par', full.names = FALSE)
for (temp in templist) {
generate.param.list(template=temp, param.list=list(FITNESS_OPTIMUM=c(-1, -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75, 1),
FITNESS_OPTIMUM=c(-1, -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75, 1),
FILE_NEXTPAR=nextpar), vec.indx=c(1,2,1),
simevolv=sim, reps=13, launchfile="launcher.sh")
}
}
#Properties of S:
def.e <- 0.12 #eccentricity
def.s <- 10 #size
##This loop creates a parameter template for each angle given.
values <- list(-3*pi/8, -pi/4, -pi/8, 0, pi/8, pi/4, 3*pi/8, pi/2-0.001)
for (i in sims.dirs) {
param.template = file.path(i, "nextpar.temp")
for (a in values) {
param.file <- file.path(i, sprintf("nextpar%s.temp", round(a, digits=1)))
new.dir<- str_split(param.file, "nextpar", n=2, simplify = TRUE)
param.from.sel.features(param.template, param.file, angle=a, size=def.s, eccentricity=def.e)
file.rename(from=param.file, to=sprintf("%s/%s", i, sprintf("nextpar%s.par", round(a, digits=1))))
}
}
#Properties of S:
def.e <- 1 #1 #eccentricity
for (sims.dir in sims.dirs) {
param.template = file.path(sims.dir, "template.temp")
param.file <- file.path(sims.dir, sprintf("templateangle%s.temp", round(a, digits=3)))
param.from.sel.features(param.template, param.file, angle=0, size=def.s, eccentricity=def.e)
file.rename(from=param.file, to=sprintf("%s/%s",sims.dir, sprintf("templateangle%s.temp", 0)))
}
##This loop creates a parameter file for each optimums
for (i in sims.dirs) {
templist <- list.files(path=i, pattern='templateangle.*\\.temp', full.names = TRUE)
nextpar <- list.files(path=i, pattern='nextpar.*\\.par', full.names = FALSE)
for (temp in templist) {
generate.param.list(template=temp, param.list=list(FITNESS_OPTIMUM=c(-1, -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75, 1),
FITNESS_OPTIMUM=c(-1, -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75, 1),
FILE_NEXTPAR=nextpar), vec.indx=c(1,2,1),
simevolv=sim, reps=13, launchfile="launcher.sh")
}
}
#####################
sims.dirs <- list.dirs("../../simul/templates/fig_2_bis/", recursive = FALSE)
sims.dirs
#####################
sims.dirs <- list.dirs("../../templates/fig_2_bis/", recursive = FALSE)
sims.dirs
#####################
sims.dirs <- list.dirs("../../templates/fig_2_bis", recursive = FALSE)
#Properties of S for Wagner model :
def.e <- 0.12 #1 #eccentricity
def.s <- 10 #size
#####################
source("../functions_R/All_functions.R")
#Angle values :
values <- list(-1.5, 1.5,-1.4, 1.4, -1, 1, -0.5, 0.5, -0.7, -0.2, 0.2, -0.3, 0.3, -0.4, 0.4, 0, -0.6, 0.6, -0.9, 0.9, 0.7, -0.8, 0.8, -1.1, 1.1, -1.2, 1.2,-1.3, 1.3, -1.4, 1.4,-0.1, 0.1)
for (sims.dir in sims.dirs) {
param.template = file.path(sims.dir, "template.temp")
new.dir<- str_split(sims.dir, "../../templates/", n=2, simplify = TRUE)
# dir.create(sprintf("../../simul/%s", new.dir[2]))
sprintf("../../simul/%s", new.dir[2])
for (a in values) {
# param.file <- file.path(sims.dir, sprintf("templateangle%s.par", round(a, digits=3)))
# param.from.sel.features(param.template, param.file, angle=a, size=def.s, eccentricity=def.e)
}
}
print("Parameter files done !")
for (sims.dir in sims.dirs) {
param.template = file.path(sims.dir, "template.temp")
new.dir<- str_split(sims.dir, "../../templates/", n=2, simplify = TRUE)
# dir.create(sprintf("../../simul/%s", new.dir[2]))
print(sprintf("../../simul/%s", new.dir[2]))
for (a in values) {
# param.file <- file.path(sims.dir, sprintf("templateangle%s.par", round(a, digits=3)))
# param.from.sel.features(param.template, param.file, angle=a, size=def.s, eccentricity=def.e)
}
}
print("Parameter files done !")
#####################
sims.dirs <- list.dirs("../../templates/fig_2_bis", recursive = FALSE)
#Properties of S for Wagner model :
def.e <- 0.12 #1 #eccentricity
def.s <- 10 #size
#####################
#This loop creates a parameter template for each angle given.
new.dir<- str_split(sims.dir, "../../templates/", n=2, simplify = TRUE)
dir.create(sprintf("../../simul/%s", new.dir[2]))
#Angle values :
values <- list(-1.5, 1.5,-1.4, 1.4, -1, 1, -0.5, 0.5, -0.7, -0.2, 0.2, -0.3, 0.3, -0.4, 0.4, 0, -0.6, 0.6, -0.9, 0.9, 0.7, -0.8, 0.8, -1.1, 1.1, -1.2, 1.2,-1.3, 1.3, -1.4, 1.4,-0.1, 0.1)
for (sims.dir in sims.dirs) {
param.template = file.path(sims.dir, "template.temp")
new.dir<- str_split(sims.dir, "../../templates/", n=2, simplify = TRUE)
dir <- sprintf("../../simul/%s", new.dir[2])
dir.create(dir)
for (a in values) {
param.file <- file.path(dir, sprintf("templateangle%s.par", round(a, digits=3)))
param.from.sel.features(param.template, param.file, angle=a, size=def.s, eccentricity=def.e)
}
}
print("Parameter files done !")
source("../functions_R/All_functions.R")
#Localisation of Simevolv program :
sim <- "/home/apetit/simevolv/bin/Release/Simul_Prog"
#This loop creates a parameter template for each angle given.
#Angle values :
values <- list(-1.5, 1.5,-1.4, 1.4, -1, 1, -0.5, 0.5, -0.7, -0.2, 0.2, -0.3, 0.3, -0.4, 0.4, 0, -0.6, 0.6, -0.9, 0.9, 0.7, -0.8, 0.8, -1.1, 1.1, -1.2, 1.2,-1.3, 1.3, -1.4, 1.4,-0.1, 0.1)
for (sims.dir in sims.dirs) {
param.template = file.path(sims.dir, "template.temp")
new.dir<- str_split(sims.dir, "../../templates/", n=2, simplify = TRUE)
dir <- sprintf("../../simul/%s", new.dir[2])
dir.create(dir)
for (a in values) {
param.file <- file.path(dir, sprintf("templateangle%s.par", round(a, digits=3)))
param.from.sel.features(param.template, param.file, angle=a, size=def.s, eccentricity=def.e, simevolv=sim)
}
}
print("Parameter files done !")
source("../functions_R/All_functions.R")
#Localisation of Simevolv program :
sim <- "/home/apetit/simevolv/bin/Release/Simul_Prog"
#####################
#This loop creates a parameter template for each angle given.
#Angle values :
values <- list(-1.5, 1.5,-1.4, 1.4, -1, 1, -0.5, 0.5, -0.7, -0.2, 0.2, -0.3, 0.3, -0.4, 0.4, 0, -0.6, 0.6, -0.9, 0.9, 0.7, -0.8, 0.8, -1.1, 1.1, -1.2, 1.2,-1.3, 1.3, -1.4, 1.4,-0.1, 0.1)
for (sims.dir in sims.dirs) {
param.template = file.path(sims.dir, "template.temp")
new.dir<- str_split(sims.dir, "../../templates/", n=2, simplify = TRUE)
dir <- sprintf("../../simul/%s", new.dir[2])
dir.create(dir)
for (a in values) {
param.file <- file.path(dir, sprintf("templateangle%s.par", round(a, digits=3)))
param.from.sel.features(param.template, param.file, angle=a, size=def.s, eccentricity=def.e, simevolv=sim)
}
}
print("Parameter files done !")
source("../functions_R/All_functions.R")
#####################
sims.dirs <- list.dirs("../../templates/fig_2_bis", recursive = FALSE)
#Properties of S for Wagner model :
def.e <- 0.12 #1 #eccentricity
def.s <- 10 #size
#####################
#This loop creates a parameter template for each angle given.
#Angle values :
values <- list(-1.5, 1.5,-1.4, 1.4, -1, 1, -0.5, 0.5, -0.7, -0.2, 0.2, -0.3, 0.3, -0.4, 0.4, 0, -0.6, 0.6, -0.9, 0.9, 0.7, -0.8, 0.8, -1.1, 1.1, -1.2, 1.2,-1.3, 1.3, -1.4, 1.4,-0.1, 0.1)
for (sims.dir in sims.dirs) {
param.template = file.path(sims.dir, "template.temp")
new.dir<- str_split(sims.dir, "../../templates/", n=2, simplify = TRUE)
dir <- sprintf("../../simul/%s", new.dir[2])
dir.create(dir)
for (a in values) {
param.file <- file.path(dir, sprintf("templateangle%s.par", round(a, digits=3)))
param.from.sel.features(param.template, param.file, angle=a, size=def.s, eccentricity=def.e)
}
}
print("Parameter files done !")
source("../functions_R/All_functions.R")
#####################
sims.dirs <- c(
"../../templates/fig_3_bis/no_ab","../../templates/fig_3_bis/neg_ab","../../templates/fig_3_bis/pos_ab"
)
#Localisation of Simevolv program :
sim <- "/home/apetit/simevolv/bin/Release/Simul_Prog"
#####################
#Second evolutionary phase : correlational selection
#Properties of S:
def.e <- 0.12 #eccentricity
def.s <- 10 #size
##This loop creates a parameter template for each angle given.
values <- list(-3*pi/8, -pi/4, -pi/8, 0, pi/8, pi/4, 3*pi/8, pi/2-0.001)
for (i in sims.dirs) {
param.template = file.path(i, "nextpar.temp")
new.dir<- str_split(sims.dir, "../../templates/", n=2, simplify = TRUE)
dir <- sprintf("../../simul/%s", new.dir[2])
dir.create(dir)
for (a in values) {
param.file <- file.path(dir, sprintf("nextpar%s.temp", round(a, digits=1)))
param.from.sel.features(param.template, param.file, angle=a, size=def.s, eccentricity=def.e)
file.rename(from=param.file, to=sprintf("%s/%s", dir, sprintf("nextpar%s.par", round(a, digits=1))))
}
}
new.dir
##This loop creates a parameter template for each angle given.
values <- list(-3*pi/8, -pi/4, -pi/8, 0, pi/8, pi/4, 3*pi/8, pi/2-0.001)
for (i in sims.dirs) {
param.template = file.path(i, "nextpar.temp")
new.dir<- str_split(i, "../../templates/", n=2, simplify = TRUE)
dir <- sprintf("../../simul/%s", new.dir[2])
dir.create(dir)
for (a in values) {
param.file <- file.path(dir, sprintf("nextpar%s.temp", round(a, digits=1)))
param.from.sel.features(param.template, param.file, angle=a, size=def.s, eccentricity=def.e)
file.rename(from=param.file, to=sprintf("%s/%s", dir, sprintf("nextpar%s.par", round(a, digits=1))))
}
}
##This loop creates a parameter template for each angle given.
values <- list(-3*pi/8, -pi/4, -pi/8, 0, pi/8, pi/4, 3*pi/8, pi/2-0.001)
for (i in sims.dirs) {
param.template = file.path(i, "nextpar.temp")
new.dir<- str_split(i, "../../templates/", n=2, simplify = TRUE)
dir <- sprintf("../../simul/%s", new.dir[2])
dir.create(dir)
for (a in values) {
param.file <- file.path(dir, sprintf("nextpar%s.temp", round(a, digits=1)))
param.from.sel.features(param.template, param.file, angle=a, size=def.s, eccentricity=def.e)
file.rename(from=param.file, to=sprintf("%s/%s", dir, sprintf("nextpar%s.par", round(a, digits=1))))
}
}
for (sims.dir in sims.dirs) {
param.template = file.path(sims.dir, "template.temp")
new.dir<- str_split(i, "../../templates/", n=2, simplify = TRUE)
dir <- sprintf("../../simul/%s", new.dir[2])
param.file <- file.path(dir, sprintf("templateangle%s.temp", round(a, digits=3)))
param.from.sel.features(param.template, param.file, angle=0, size=def.s, eccentricity=def.e)
file.rename(from=param.file, to=sprintf("%s/%s", dir, sprintf("templateangle%s.temp", 0)))
templist <- list.files(path=dir, pattern='templateangle.*\\.temp', full.names = TRUE)
nextpar <- list.files(path=dir, pattern='nextpar.*\\.par', full.names = FALSE)
##This loop creates a parameter file for each optimums
for (temp in templist) {
generate.param.list(template=temp, param.list=list(FITNESS_OPTIMUM=c(-1, -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75, 1),
FITNESS_OPTIMUM=c(-1, -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75, 1),
FILE_NEXTPAR=nextpar), vec.indx=c(1,2,1),
simevolv=sim, reps=13, launchfile="launcher.sh")
}
}
#Properties of S:
def.e <- 0.12 #eccentricity
def.s <- 10 #size
##This loop creates a parameter template for each angle given.
values <- list(-3*pi/8, -pi/4, -pi/8, 0, pi/8, pi/4, 3*pi/8, pi/2-0.001)
for (i in sims.dirs) {
param.template = file.path(i, "nextpar.temp")
new.dir<- str_split(i, "../../templates/", n=2, simplify = TRUE)
dir <- sprintf("../../simul/%s", new.dir[2])
dir.create(dir)
for (a in values) {
param.file <- file.path(dir, sprintf("nextpar%s.temp", round(a, digits=1)))
param.from.sel.features(param.template, param.file, angle=a, size=def.s, eccentricity=def.e)
file.rename(from=param.file, to=sprintf("%s/%s", dir, sprintf("nextpar%s.par", round(a, digits=1))))
}
}
#Properties of S:
def.e <- 1 #1 #eccentricity
for (sims.dir in sims.dirs) {
nextpar <- list.files(path=dir, pattern='nextpar.*\\.par', full.names = FALSE)
param.template = file.path(sims.dir, "template.temp")
new.dir<- str_split(i, "../../templates/", n=2, simplify = TRUE)
dir <- sprintf("../../simul/%s", new.dir[2])
param.file <- file.path(dir, sprintf("templateangle%s.temp", round(a, digits=3)))
param.from.sel.features(param.template, param.file, angle=0, size=def.s, eccentricity=def.e)
file.rename(from=param.file, to=sprintf("%s/%s", dir, sprintf("templateangle%s.temp", 0)))
templist <- list.files(path=dir, pattern='templateangle.*\\.temp', full.names = TRUE)
##This loop creates a parameter file for each optimums
for (temp in templist) {
generate.param.list(template=temp, param.list=list(FITNESS_OPTIMUM=c(-1, -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75, 1),
FITNESS_OPTIMUM=c(-1, -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75, 1),
FILE_NEXTPAR=nextpar), vec.indx=c(1,2,1),
simevolv=sim, reps=13, launchfile="launcher.sh")
}
}
source("../functions_R/All_functions.R")
#####################
sims.dirs <- c(
"../../templates/fig_3_bis/no_ab","../../templates/fig_3_bis/neg_ab","../../templates/fig_3_bis/pos_ab"
)
#Localisation of Simevolv program :
sim <- "/home/apetit/simevolv/bin/Release/Simul_Prog"
#####################
#Second evolutionary phase : correlational selection
#Properties of S:
def.e <- 0.12 #eccentricity
def.s <- 10 #size
##This loop creates a parameter template for each angle given.
values <- list(-3*pi/8, -pi/4, -pi/8, 0, pi/8, pi/4, 3*pi/8, pi/2-0.001)
for (i in sims.dirs) {
param.template = file.path(i, "nextpar.temp")
new.dir<- str_split(i, "../../templates/", n=2, simplify = TRUE)
dir <- sprintf("../../simul/%s", new.dir[2])
dir.create(dir)
for (a in values) {
param.file <- file.path(dir, sprintf("nextpar%s.temp", round(a, digits=1)))
param.from.sel.features(param.template, param.file, angle=a, size=def.s, eccentricity=def.e)
file.rename(from=param.file, to=sprintf("%s/%s", dir, sprintf("nextpar%s.par", round(a, digits=1))))
}
}
#Properties of S:
def.e <- 1 #1 #eccentricity
for (sims.dir in sims.dirs) {
param.template = file.path(sims.dir, "template.temp")
new.dir<- str_split(i, "../../templates/", n=2, simplify = TRUE)
dir <- sprintf("../../simul/%s", new.dir[2])
param.file <- file.path(dir, sprintf("templateangle%s.temp", round(a, digits=3)))
param.from.sel.features(param.template, param.file, angle=0, size=def.s, eccentricity=def.e)
file.rename(from=param.file, to=sprintf("%s/%s", dir, sprintf("templateangle%s.temp", 0)))
}
##This loop creates a parameter file for each optimums
for (i in sims.dirs) {
templist <- list.files(path=dir, pattern='templateangle.*\\.temp', full.names = TRUE)
nextpar <- list.files(path=dir, pattern='nextpar.*\\.par', full.names = FALSE)
for (temp in templist) {
generate.param.list(template=temp, param.list=list(FITNESS_OPTIMUM=c(-1, -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75, 1),
FITNESS_OPTIMUM=c(-1, -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75, 1),
FILE_NEXTPAR=nextpar), vec.indx=c(1,2,1),
simevolv=sim, reps=13, launchfile="launcher.sh")
}
}
##This loop creates a parameter template for each angle given.
values <- list(-3*pi/8, -pi/4, -pi/8, 0, pi/8, pi/4, 3*pi/8, pi/2-0.001)
for (i in sims.dirs) {
param.template = file.path(i, "nextpar.temp")
new.dir<- str_split(i, "../../templates/", n=2, simplify = TRUE)
dir <- sprintf("../../simul/%s", new.dir[2])
dir.create(dir)
for (a in values) {
param.file <- file.path(dir, sprintf("nextpar%s.temp", round(a, digits=1)))
param.from.sel.features(param.template, param.file, angle=a, size=def.s, eccentricity=def.e)
file.rename(from=param.file, to=sprintf("%s/%s", dir, sprintf("nextpar%s.par", round(a, digits=1))))
}
}
#Properties of S:
def.e <- 0.12 #eccentricity
def.s <- 10 #size
##This loop creates a parameter template for each angle given.
values <- list(-3*pi/8, -pi/4, -pi/8, 0, pi/8, pi/4, 3*pi/8, pi/2-0.001)
for (i in sims.dirs) {
param.template = file.path(i, "nextpar.temp")
new.dir<- str_split(i, "../../templates/", n=2, simplify = TRUE)
dir <- sprintf("../../simul/%s", new.dir[2])
dir.create(dir)
for (a in values) {
param.file <- file.path(dir, sprintf("nextpar%s.temp", round(a, digits=1)))
param.from.sel.features(param.template, param.file, angle=a, size=def.s, eccentricity=def.e)
file.rename(from=param.file, to=sprintf("%s/%s", dir, sprintf("nextpar%s.par", round(a, digits=1))))
}
}
#Properties of S:
def.e <- 1 #1 #eccentricity
for (sims.dir in sims.dirs) {
param.template = file.path(sims.dir, "template.temp")
new.dir<- str_split(i, "../../templates/", n=2, simplify = TRUE)
dir <- sprintf("../../simul/%s", new.dir[2])
param.file <- file.path(dir, sprintf("templateangle%s.temp", round(a, digits=3)))
param.from.sel.features(param.template, param.file, angle=0, size=def.s, eccentricity=def.e)
file.rename(from=param.file, to=sprintf("%s/%s", dir, sprintf("templateangle%s.temp", 0)))
}
dir
for (sims.dir in sims.dirs) {
param.template = file.path(sims.dir, "template.temp")
new.dir<- str_split(sims.dir, "../../templates/", n=2, simplify = TRUE)
dir <- sprintf("../../simul/%s", new.dir[2])
param.file <- file.path(dir, sprintf("templateangle%s.temp", round(a, digits=3)))
param.from.sel.features(param.template, param.file, angle=0, size=def.s, eccentricity=def.e)
file.rename(from=param.file, to=sprintf("%s/%s", dir, sprintf("templateangle%s.temp", 0)))
}
for (i in sims.dirs) {
new.dir<- str_split(i, "../../templates/", n=2, simplify = TRUE)
dir <- sprintf("../../simul/%s", new.dir[2])
templist <- list.files(path=dir, pattern='templateangle.*\\.temp', full.names = TRUE)
nextpar <- list.files(path=dir, pattern='nextpar.*\\.par', full.names = FALSE)
for (temp in templist) {
generate.param.list(template=temp, param.list=list(FITNESS_OPTIMUM=c(-1, -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75, 1),
FITNESS_OPTIMUM=c(-1, -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75, 1),
FILE_NEXTPAR=nextpar), vec.indx=c(1,2,1),
simevolv=sim, reps=13, launchfile="launcher.sh")
}
}
#Properties of S:
def.e <- 0.12 #eccentricity
def.s <- 10 #size
##This loop creates a parameter template for each angle given.
values <- list(-3*pi/8, -pi/4, -pi/8, 0, pi/8, pi/4, 3*pi/8, pi/2-0.001)
for (i in sims.dirs) {
param.template = file.path(i, "nextpar.temp")
new.dir<- str_split(i, "../../templates/", n=2, simplify = TRUE)
dir <- sprintf("../../simul/%s", new.dir[2])
dir.create(dir)
for (a in values) {
param.file <- file.path(dir, sprintf("nextpar%s.temp", round(a, digits=1)))
param.from.sel.features(param.template, param.file, angle=a, size=def.s, eccentricity=def.e)
file.rename(from=param.file, to=sprintf("%s/%s", dir, sprintf("nextpar%s.par", round(a, digits=1))))
}
}
###############################
#Fisrt evolutionary phase : getting to the optimum
#Properties of S:
def.e <- 1 #1 #eccentricity
for (sims.dir in sims.dirs) {
param.template = file.path(sims.dir, "template.temp")
new.dir<- str_split(sims.dir, "../../templates/", n=2, simplify = TRUE)
dir <- sprintf("../../simul/%s", new.dir[2])
nextpar <- list.files(path=dir, pattern='nextpar.*\\.par', full.names = FALSE)
param.file <- file.path(dir, sprintf("templateangle%s.temp", round(a, digits=3)))
param.from.sel.features(param.template, param.file, angle=0, size=def.s, eccentricity=def.e)
file.rename(from=param.file, to=sprintf("%s/%s", dir, sprintf("templateangle%s.temp", 0)))
templist <- list.files(path=dir, pattern='templateangle.*\\.temp', full.names = TRUE)
for (temp in templist) {
generate.param.list(template=temp, param.list=list(FITNESS_OPTIMUM=c(-1, -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75, 1),
FITNESS_OPTIMUM=c(-1, -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75, 1),
FILE_NEXTPAR=nextpar), vec.indx=c(1,2,1),
simevolv=sim, reps=13, launchfile="launcher.sh")
}
}
templist
temp
#Properties of S:
def.e <- 0.12 #eccentricity
def.s <- 10 #size
##This loop creates a parameter template for each angle given.
values <- list(-3*pi/8, -pi/4, -pi/8, 0, pi/8, pi/4, 3*pi/8, pi/2-0.001)
for (i in sims.dirs) {
param.template = file.path(i, "nextpar.temp")
new.dir<- str_split(i, "../../templates/", n=2, simplify = TRUE)
dir <- sprintf("../../simul/%s", new.dir[2])
dir.create(dir)
for (a in values) {
param.file <- file.path(dir, sprintf("nextpar%s.temp", round(a, digits=1)))
param.from.sel.features(param.template, param.file, angle=a, size=def.s, eccentricity=def.e)
file.rename(from=param.file, to=sprintf("%s/%s", dir, sprintf("nextpar%s.par", round(a, digits=1))))
}
}
#Properties of S:
def.e <- 1 #1 #eccentricity
for (sims.dir in sims.dirs) {
param.template = file.path(sims.dir, "template.temp")
new.dir<- str_split(sims.dir, "../../templates/", n=2, simplify = TRUE)
dir <- sprintf("../../simul/%s", new.dir[2])
nextpar <- list.files(path=dir, pattern='nextpar.*\\.par', full.names = FALSE)
param.file <- file.path(dir, sprintf("templateangle%s.temp", round(a, digits=3)))
param.from.sel.features(param.template, param.file, angle=0, size=def.s, eccentricity=def.e)
file.rename(from=param.file, to=sprintf("%s/%s", dir, sprintf("templateangle%s.temp", 0)))
##This loop creates a parameter file for each optimums
templist <- list.files(path=dir, pattern='templateangle.*\\.temp', full.names = TRUE)
for (temp in templist) {
generate.param.list(template=temp, param.list=list(FITNESS_OPTIMUM=c(-1, -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75, 1),
FITNESS_OPTIMUM=c(-1, -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75, 1),
FILE_NEXTPAR=nextpar), vec.indx=c(1,2,1),
simevolv=sim, reps=13, launchfile="launcher.sh")
}
}
sims.dirs <- c(
"../../templates/fig_3_bis/no_ab","../../templates/fig_3_bis/neg_ab","../../templates/fig_3_bis/pos_ab"
)
#Localisation of Simevolv program :
sim <- "/home/apetit/simevolv/bin/Release/Simul_Prog"
#####################
#Second evolutionary phase : correlational selection
#Properties of S:
def.e <- 0.12 #eccentricity
def.s <- 10 #size
##This loop creates a parameter template for each angle given.
values <- list(-3*pi/8, -pi/4, -pi/8, 0, pi/8, pi/4, 3*pi/8, pi/2-0.001)
for (i in sims.dirs) {
param.template = file.path(i, "nextpar.temp")
new.dir<- str_split(i, "../../templates/", n=2, simplify = TRUE)
dir <- sprintf("../../simul/%s", new.dir[2])
dir.create(dir)
for (a in values) {
param.file <- file.path(dir, sprintf("nextpar%s.temp", round(a, digits=1)))
param.from.sel.features(param.template, param.file, angle=a, size=def.s, eccentricity=def.e)
file.rename(from=param.file, to=sprintf("%s/%s", dir, sprintf("nextpar%s.par", round(a, digits=1))))
}
}
###############################
#Fisrt evolutionary phase : getting to the optimum
#Properties of S:
def.e <- 1 #1 #eccentricity
for (sims.dir in sims.dirs) {
param.template = file.path(sims.dir, "template.temp")
new.dir<- str_split(sims.dir, "../../templates/", n=2, simplify = TRUE)
dir <- sprintf("../../simul/%s", new.dir[2])
nextpar <- list.files(path=dir, pattern='nextpar.*\\.par', full.names = FALSE)
param.file <- file.path(dir, sprintf("templateangle%s.temp", round(a, digits=3)))
param.from.sel.features(param.template, param.file, angle=0, size=def.s, eccentricity=def.e)
file.rename(from=param.file, to=sprintf("%s/%s", dir, sprintf("templateangle%s.temp", 0)))
##This loop creates a parameter file for each optimums
templist <- list.files(path=dir, pattern='templateangle.*\\.temp', full.names = TRUE)
for (temp in templist) {
generate.param.list(template=temp, param.list=list(FITNESS_OPTIMUM=c(-1, -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75, 1),
FITNESS_OPTIMUM=c(-1, -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75, 1),
FILE_NEXTPAR=nextpar), vec.indx=c(1,2,1),
simevolv=sim, reps=13, launchfile="launcher.sh")
}
}
