geom_abline()+
labs(title = ("A/ M angle distribution and mean for different S angle"), y="M Angle", x="S Angle")+
# geom_smooth(aes(fill=netw), alpha = 0, method = "AngleSmooth", span=0.9, level = 0.95)+
geom_point(aes(y=mean_ang_M, fill=netw), show.legend = FALSE)+
stat_summary(geom = "linerange", position = "identity", fun.data = st_dev_angle, size=3, alpha=0.2, show.legend = FALSE)
p2 <- fracAx(p=p2, y=TRUE, "pi")
p2 <- p2 + facet_wrap(vars(netw), ncol=2) + theme(strip.background = element_blank(), strip.text = element_blank())
p2
p2 <- ggplot(data=df.all, aes(ang_S, ang_M,col=netw))+
coord_fixed(ratio = 1)+
geom_abline()+
labs(title = ("A/ M angle distribution and mean for different S angle"), y="M Angle", x="S Angle")+
# geom_smooth(aes(fill=netw), alpha = 0, method = "AngleSmooth", span=0.9, level = 0.95)+
geom_point(aes(y=mean_ang_M, fill=netw), show.legend = FALSE)+
stat_summary( aes(ang_S, ang_M,col=netw), geom = "linerange", position = "identity", fun.data = st_dev_angle, size=3, alpha=0.2, show.legend = FALSE)
p2 <- fracAx(p=p2, y=TRUE, "pi")
p2 <- p2 + facet_wrap(vars(netw), ncol=2) + theme(strip.background = element_blank(), strip.text = element_blank())
p2
st_dev_angle2 <- function(data){
browser()
sd <- mean(sqrt( modulo.all((data - mean.angle.pi(data)))^2 ))
data.frame( ymin=(mean.angle.pi(data))-sd,
ymax=(mean.angle.pi(data))+sd
)
}
ggplot(data=df.all, aes(ang_S, ang_M,col=netw))+
coord_fixed(ratio = 1)+
geom_abline()+
labs(title = ("A/ M angle distribution and mean for different S angle"), y="M Angle", x="S Angle")+
# geom_smooth(aes(fill=netw), alpha = 0, method = "AngleSmooth", span=0.9, level = 0.95)+
geom_point(aes(y=mean_ang_M, fill=netw), show.legend = FALSE)+
stat_summary( aes(ang_S, ang_M,col=netw), geom = "linerange", position = "identity", fun.data = st_dev_angle2, size=3, alpha=0.2, show.legend = FALSE)
data()
data
st_dev_angle2 <- function(data, y){
browser()
sd <- mean(sqrt( modulo.all((data - mean.angle.pi.byS(data, y)))^2 ))
data.frame( ymin=(mean.angle.pi.byS(data, y))-sd,
ymax=(mean.angle.pi.byS(data, y))+sd
)
}
ggplot(data=df.all, aes(ang_S, ang_M,col=netw))+
coord_fixed(ratio = 1)+
geom_abline()+
labs(title = ("A/ M angle distribution and mean for different S angle"), y="M Angle", x="S Angle")+
# geom_smooth(aes(fill=netw), alpha = 0, method = "AngleSmooth", span=0.9, level = 0.95)+
geom_point(aes(y=mean_ang_M, fill=netw), show.legend = FALSE)+
stat_summary( aes(ang_S, ang_M,col=netw), geom = "linerange", position = "identity", fun.data = st_dev_angle2(data, y), size=3, alpha=0.2, show.legend = FALSE)
force(y)
force(data)
data
y
mean(sqrt( modulo.all((data - mean.angle.pi.byS(data, y)))^2 ))
st_dev_angle2 <- function(data, y){
browser()
sd <- mean(sqrt( modulo.all((data - mean.angle.pi.byS(data, y)))^2 ))
data.frame( ymin=(mean.angle.pi.byS(data, y))-sd,
ymax=(mean.angle.pi.byS(data, y))+sd
)
}
ggplot(data=df.all, aes(ang_S, ang_M,col=netw))+
coord_fixed(ratio = 1)+
geom_abline()+
labs(title = ("A/ M angle distribution and mean for different S angle"), y="M Angle", x="S Angle")+
# geom_smooth(aes(fill=netw), alpha = 0, method = "AngleSmooth", span=0.9, level = 0.95)+
geom_point(aes(y=mean_ang_M, fill=netw), show.legend = FALSE)+
stat_summary( aes(ang_S, ang_M,col=netw), geom = "linerange", position = "identity", fun.data = st_dev_angle2(data, y), size=3, alpha=0.2, show.legend = FALSE)
data
y
mean.angle.pi.byS <- function(data, ang_S) {
df <- modulo.all(mean.angle.2pi(2*(data %% pi))/2, pi)
if ((df - mean(ang_S, 7)/2) < -pi/2){ df = df + pi}
if ((df - mean(ang_S, 7)/2) > pi/2){ df = df - pi}
return(df)
}
source("~/Work/Mmatrix_paper/scripts/functions_R/ggplot2_custom_functions.R")
source("~/Work/Mmatrix_paper/scripts/functions_R/ggplot2_custom_functions.R")
ggplot(data=df.all, aes(ang_S, ang_M,col=netw))+
coord_fixed(ratio = 1)+
geom_abline()+
labs(title = ("A/ M angle distribution and mean for different S angle"), y="M Angle", x="S Angle")+
# geom_smooth(aes(fill=netw), alpha = 0, method = "AngleSmooth", span=0.9, level = 0.95)+
geom_point(aes(y=mean_ang_M, fill=netw), show.legend = FALSE)+
stat_summary( aes(ang_S, ang_M,col=netw), geom = "linerange", position = "identity", fun.data = st_dev_angle2(data, y), size=3, alpha=0.2, show.legend = FALSE)
mean(sqrt( modulo.all((data - mean.angle.pi.byS(data, y)))^2 ))
p2 <- ggplot(data=df.all, aes(ang_S, ang_M,col=netw))+
coord_fixed(ratio = 1)+
geom_abline()+
labs(title = ("A/ M angle distribution and mean for different S angle"), y="M Angle", x="S Angle")+
# geom_smooth(aes(fill=netw), alpha = 0, method = "AngleSmooth", span=0.9, level = 0.95)+
geom_point(aes(y=mean_ang_M, fill=netw), show.legend = FALSE)+
stat_summary( aes(ang_S, ang_M,col=netw), geom = "linerange", position = "identity", fun.data = st_dev_angle, size=3, alpha=0.2, show.legend = FALSE)
p2 <- fracAx(p=p2, y=TRUE, "pi")
p2 <- p2 + facet_wrap(vars(netw), ncol=2) + theme(strip.background = element_blank(), strip.text = element_blank())
p2
p2 <- ggplot(data=df.all, aes(ang_S, ang_M,col=netw))+
coord_fixed(ratio = 1)+
geom_abline()+
labs(title = ("A/ M angle distribution and mean for different S angle"), y="M Angle", x="S Angle")+
# geom_smooth(aes(fill=netw), alpha = 0, method = "AngleSmooth", span=0.9, level = 0.95)+
geom_point(aes(y=mean_ang_M, fill=netw), show.legend = FALSE)+
stat_summary( aes(ang_S, ang_M,col=netw), geom = "linerange", position = "identity", fun.data = st_dev_angle, size=3, alpha=0.2, show.legend = FALSE)
p2 <- fracAx(p=p2, y=TRUE, "pi")
p2 <- p2 + facet_wrap(vars(netw), ncol=2) + theme(strip.background = element_blank(), strip.text = element_blank())
p2
st_dev_angle2 <- function(data, y){
browser()
sd <- mean(sqrt( modulo.all((data - mean.angle.pi(data)))^2 ))
data.frame( ymin=(mean.angle.pi.byS(data, y))-sd,
ymax=(mean.angle.pi.byS(data, y))+sd
)
}
ggplot(data=df.all, aes(ang_S, ang_M,col=netw))+
coord_fixed(ratio = 1)+
geom_abline()+
labs(title = ("A/ M angle distribution and mean for different S angle"), y="M Angle", x="S Angle")+
# geom_smooth(aes(fill=netw), alpha = 0, method = "AngleSmooth", span=0.9, level = 0.95)+
geom_point(aes(y=mean_ang_M, fill=netw), show.legend = FALSE)+
stat_summary( aes(ang_S, ang_M,col=netw), geom = "linerange", position = "identity", fun.data = st_dev_angle2(data=ang_M, y=ang_S), size=3, alpha=0.2, show.legend = FALSE)
data()
data
st_dev_angle2 <- function(data, x){
browser()
sd <- mean(sqrt( modulo.all((data - mean.angle.pi(data)))^2 ))
data.frame( ymin=(mean.angle.pi.byS(data, x))-sd,
ymax=(mean.angle.pi.byS(data, x))+sd
)
}
p2 <- ggplot(data=df.all, aes(ang_S, ang_M,col=netw))+
coord_fixed(ratio = 1)+
geom_abline()+
labs(title = ("A/ M angle distribution and mean for different S angle"), y="M Angle", x="S Angle")+
# geom_smooth(aes(fill=netw), alpha = 0, method = "AngleSmooth", span=0.9, level = 0.95)+
geom_point(aes(y=mean_ang_M, fill=netw), show.legend = FALSE)+
stat_summary( aes(ang_S, ang_M,col=netw), geom = "linerange", position = "identity", fun.data = st_dev_angle2(data=y, x=x), size=3, alpha=0.2, show.legend = FALSE)
ggplot(data=df.all, aes(ang_S, ang_M,col=netw))+
coord_fixed(ratio = 1)+
geom_abline()+
labs(title = ("A/ M angle distribution and mean for different S angle"), y="M Angle", x="S Angle")+
# geom_smooth(aes(fill=netw), alpha = 0, method = "AngleSmooth", span=0.9, level = 0.95)+
geom_point(aes(y=mean_ang_M, fill=netw), show.legend = FALSE)+
stat_summary( aes(ang_S, ang_M,col=netw), geom = "linerange", position = "identity", fun.data = st_dev_angle2, size=3, alpha=0.2, show.legend = FALSE)
data
p2 <- ggplot(data=df.all, aes(ang_S, ang_M,col=netw))+
coord_fixed(ratio = 1)+
geom_abline()+
labs(title = ("A/ M angle distribution and mean for different S angle"), y="M Angle", x="S Angle")+
# geom_smooth(aes(fill=netw), alpha = 0, method = "AngleSmooth", span=0.9, level = 0.95)+
geom_point(aes(y=mean_ang_M, fill=netw), show.legend = FALSE)+
stat_summary( aes(ang_S, ang_M,col=netw), geom = "linerange", position = "identity", fun.data = st_dev_angle, size=3, alpha=0.2, show.legend = FALSE)
p2 <- fracAx(p=p2, y=TRUE, "pi")
p2 <- p2 + facet_wrap(vars(netw), ncol=2) + theme(strip.background = element_blank(), strip.text = element_blank())
p2
source("~/Work/Mmatrix_paper/scripts/functions_R/ggplot2_custom_functions.R")
p2 <- ggplot(data=df.all, aes(ang_S, ang_M,col=netw))+
coord_fixed(ratio = 1)+
geom_abline()+
labs(title = ("A/ M angle distribution and mean for different S angle"), y="M Angle", x="S Angle")+
# geom_smooth(aes(fill=netw), alpha = 0, method = "AngleSmooth", span=0.9, level = 0.95)+
geom_point(aes(y=mean_ang_M, fill=netw), show.legend = FALSE)+
stat_summary( aes(ang_S, ang_M,col=netw), geom = "linerange", position = "identity", fun.data = st_dev_angle, size=3, alpha=0.2, show.legend = FALSE)
p2 <- fracAx(p=p2, y=TRUE, "pi")
p2 <- p2 + facet_wrap(vars(netw), ncol=2) + theme(strip.background = element_blank(), strip.text = element_blank())
p2
mean.angle.pi.byS <- function(data) {
df <- modulo.all(mean.angle.2pi(2*(data %% pi))/2, pi)
if ((df - (pi/4)/2) < -pi/2){ df = df + pi}
if ((df - (-pi/4)/2) > pi/2){ df = df - pi}
return(df)
}
df.all <- data.frame(NULL)
for (i in sims.dirs) {
sims.dir <- list.dirs(i)[2:length(list.dirs(i))]
df <- df.topo.raw(sims.dir, network=FALSE)
df[,9] <- modulo.all(df$ang_M-df$ang_S, modulo = modulo)
sq_rho <- round(mse.ms(df[,9]), 4)
pop <- str_split(i, "../../simul/fig_2/", n=2, simplify = TRUE)
df[,10] <- sprintf("%s", pop[,2])
df.all <- rbind(df.all, df)
}
names(df.all)[names(df.all) == "V9"] <- "ang_diff"
names(df.all)[names(df.all) == "V10"] <- "netw"
df.topo.raw<- function(sims.dir, w_of_4=TRUE, network=TRUE){
simul.df <- data.frame()
#collect all the data
for (i in sims.dir) {
files     <- list.files(path = i, full.names=TRUE, pattern = "^simul")
param.file = list.files(path=i, pattern="param.par", full.names=TRUE)
stopifnot(length(files) >0, length(param.file) == 1)
#read param.par to associate each simu with the S "what"
rp <- read.param(param.file)
mut.rate <- 2*rp$GENET_MUTRATES
if (rp$GENET_MUTTYPE=="locus") mut.rate <- mut.rate*rp$GENET_NBLOC
S.ref1 <- matrix.features(extract.S.matrix(param.file), n.genes=2)[["eccentricity"]][1]
S.ref2 <- matrix.features(extract.S.matrix(param.file), n.genes=2)[["angle"]][1]
S.ref3 <- matrix.features(extract.S.matrix(param.file), n.genes=2)[["size"]][1]
mytopos <- lapply(files, function(ff) {
#print(ff)
tt <- read.table(ff, header=TRUE)
#M data
gen <-tt[nrow(tt),"Gen"]
M.mat <- extract.M.matrix(tt, gen=gen)
M.feat1 <- matrix.features(M.mat,n.genes=2)[["eccentricity"]][1] #M matrix
M.feat2 <- matrix.features(M.mat,n.genes=2)[["angle"]][1] #M matrix
M.feat3 <- matrix.features(M.mat,n.genes=2)[["size"]][1] #M matrix
mean.ma.df <- M.feat2
if (network==TRUE){
Wmat <- extract.W.matrix(tt) #W data
new <- c(ff, S.ref1, S.ref2, S.ref3, M.feat1, M.feat2, M.feat3, mean.ma.df, Wmat )
}
if (network!=TRUE){
new <- c(ff, S.ref1, S.ref2, S.ref3, M.feat1, M.feat2, M.feat3, mean.ma.df )
}
return(new)
#create a list of data
})
newt <- ldply(mytopos) # create a data.frame for i
newt[,8] <- mean.angle.pi.byS(data=as.numeric(newt[,8]))
simul.df <- rbind(simul.df, newt) #paste the data of i in a data.frame with the others
}
simul.df[,2:8] <- lapply( simul.df[,2:8], as.numeric)
names(simul.df)[names(simul.df) == "V1"] <- "data.dir"
names(simul.df)[names(simul.df) == "V2"] <- "ecc_S"
names(simul.df)[names(simul.df) == "V3"] <- "ang_S"
names(simul.df)[names(simul.df) == "V4"] <- "siz_S"
names(simul.df)[names(simul.df) == "V5"] <- "ecc_M"
names(simul.df)[names(simul.df) == "V6"] <- "ang_M"
names(simul.df)[names(simul.df) == "V7"] <- "siz_M"
names(simul.df)[names(simul.df) == "V8"] <- "mean_ang_M"
if (w_of_4==TRUE & network==TRUE) {
#Naming network cells (for 4 genes network)
names(simul.df)[names(simul.df) == "V10"] <- "B_A"
names(simul.df)[names(simul.df) == "V11"] <- "C_A"
names(simul.df)[names(simul.df) == "V12"] <- "D_A"
names(simul.df)[names(simul.df) == "V13"] <- "A_B"
names(simul.df)[names(simul.df) == "V15"] <- "C_B"
names(simul.df)[names(simul.df) == "V16"] <- "D_B"
names(simul.df)[names(simul.df) == "V17"] <- "A_C"
names(simul.df)[names(simul.df) == "V18"] <- "B_C"
names(simul.df)[names(simul.df) == "V20"] <- "D_C"
names(simul.df)[names(simul.df) == "V21"] <- "A_D"
names(simul.df)[names(simul.df) == "V22"] <- "B_D"
names(simul.df)[names(simul.df) == "V23"] <- "C_D"
simul.df[,9:24] <- lapply( simul.df[,9:24], as.numeric)
}
return(simul.df)
}
# Suffit d'ajouter + ang_S pour la moyenne ? Simple !
# Du coup non c'est pas ça mdr
#Il faudrait +pi dans certaines conditions.
#Conditions : if meanM - S/2 < -pi/2, alors meanM <- meanM + pi
#####################
sims.dirs <- c(
"../../simul/fig_2/se_0","../../simul/fig_2/se_0_abba","../../simul/fig_2/se_0_o_abbacddc",
"../../simul/fig_2/se_0_o_dacb"
)
of        <- "fig2"
modulo <- pi
#####################
df.all <- data.frame(NULL)
for (i in sims.dirs) {
sims.dir <- list.dirs(i)[2:length(list.dirs(i))]
df <- df.topo.raw(sims.dir, network=FALSE)
df[,9] <- modulo.all(df$ang_M-df$ang_S, modulo = modulo)
sq_rho <- round(mse.ms(df[,9]), 4)
pop <- str_split(i, "../../simul/fig_2/", n=2, simplify = TRUE)
df[,10] <- sprintf("%s", pop[,2])
df.all <- rbind(df.all, df)
}
names(df.all)[names(df.all) == "V9"] <- "ang_diff"
names(df.all)[names(df.all) == "V10"] <- "netw"
p2 <- ggplot(data=df.all, aes(ang_S, ang_M,col=netw))+
coord_fixed(ratio = 1)+
geom_abline()+
labs(title = ("A/ M angle distribution and mean for different S angle"), y="M Angle", x="S Angle")+
# geom_smooth(aes(fill=netw), alpha = 0, method = "AngleSmooth", span=0.9, level = 0.95)+
geom_point(aes(y=mean_ang_M, fill=netw), show.legend = FALSE)+
stat_summary( aes(ang_S, ang_M,col=netw), geom = "linerange", position = "identity", fun.data = st_dev_angle2, size=3, alpha=0.2, show.legend = FALSE)
p2 <- fracAx(p=p2, y=TRUE, "pi")
p2 <- p2 + facet_wrap(vars(netw), ncol=2) + theme(strip.background = element_blank(), strip.text = element_blank())
p2
st_dev_angle2 <- function(data){
sd <- mean(sqrt( modulo.all((data - mean.angle.pi(data)))^2 ))
data.frame( ymin=(mean.angle.pi.byS(data))-sd,
ymax=(mean.angle.pi.byS(data))+sd
)
}
p2 <- ggplot(data=df.all, aes(ang_S, ang_M,col=netw))+
coord_fixed(ratio = 1)+
geom_abline()+
labs(title = ("A/ M angle distribution and mean for different S angle"), y="M Angle", x="S Angle")+
# geom_smooth(aes(fill=netw), alpha = 0, method = "AngleSmooth", span=0.9, level = 0.95)+
geom_point(aes(y=mean_ang_M, fill=netw), show.legend = FALSE)+
stat_summary( aes(ang_S, ang_M,col=netw), geom = "linerange", position = "identity", fun.data = st_dev_angle2, size=3, alpha=0.2, show.legend = FALSE)
p2 <- fracAx(p=p2, y=TRUE, "pi")
p2 <- p2 + facet_wrap(vars(netw), ncol=2) + theme(strip.background = element_blank(), strip.text = element_blank())
p2
######################
sims.dirs.1 <- list.dirs(
"../../simul/fig_3/round_map", recursive = FALSE
)
modulo <- pi
#####################
df.all1 <- df.opt.map(sims.dirs.1)
ggplot(df.all1, aes(x=P_mean_A, y=P_mean_B, z=ang_M))+
coord_fixed(ratio = 1, xlim = c(-1.25,1.25), ylim = c(-1.25,1.25), expand = TRUE, clip = "on")+
# stat_summary_2d(breaks = c(-1.25,-0.75, -0.25, 0.25, 0.75, 1.25), fun = st_dev_abs)+
stat_summary_2d(breaks = c(-1.25,-0.75, -0.25, 0.25, 0.75, 1.25), fun = Angle_Mean)+
scale_fill_viridis_c(option = "mako")+
geom_point(aes(y=0, x=0))+
labs(title = ("A/ Angle SD for different optimum \nphenotypes with no correlation of selection"), x="Expression gene A", y="Expression gene B")+
labs(fill = "Ma sd")
ggplot(df.all1, aes(x=P_mean_A, y=P_mean_B, z=ang_M))+
coord_fixed(ratio = 1, xlim = c(-1.25,1.25), ylim = c(-1.25,1.25), expand = TRUE, clip = "on")+
# stat_summary_2d(breaks = c(-1.25,-0.75, -0.25, 0.25, 0.75, 1.25), fun = st_dev_abs)+
stat_summary_2d(breaks = c(-1.25,-0.75, -0.25, 0.25, 0.75, 1.25), fun = Angle_Mean)+
scale_fill_viridis_c(option = "mako")+
geom_point(aes(y=0, x=0))+
labs(title = ("A/ Angle SD for different optimum \nphenotypes with no correlation of selection"), x="Expression gene A", y="Expression gene B")+
labs(fill = "Ma sd")
ggplot(df.all1, aes(x=P_mean_A, y=P_mean_B, z=V11))+
coord_fixed(ratio = 1, xlim = c(-1.25,1.25), ylim = c(-1.25,1.25), expand = TRUE, clip = "on")+
# stat_summary_2d(breaks = c(-1.25,-0.75, -0.25, 0.25, 0.75, 1.25), fun = st_dev_abs)+
stat_summary_2d(breaks = c(-1.25,-0.75, -0.25, 0.25, 0.75, 1.25), fun = Angle_Mean)+
scale_fill_viridis_c(option = "mako")+
geom_point(aes(y=0, x=0))+
labs(title = ("A/ Angle SD for different optimum \nphenotypes with no correlation of selection"), x="Expression gene A", y="Expression gene B")+
labs(fill = "Ma sd")
View(df.all1)
ggplot(df.all1, aes(x=P_mean_A, y=P_mean_B, z=V11))+
coord_fixed(ratio = 1, xlim = c(-1.25,1.25), ylim = c(-1.25,1.25), expand = TRUE, clip = "on")+
# stat_summary_2d(breaks = c(-1.25,-0.75, -0.25, 0.25, 0.75, 1.25), fun = st_dev_abs)+
stat_summary_2d(breaks = c(-1.25,-0.75, -0.25, 0.25, 0.75, 1.25), fun = mean)+
scale_fill_viridis_c(option = "mako")+
geom_point(aes(y=0, x=0))+
labs(title = ("A/ Angle SD for different optimum \nphenotypes with no correlation of selection"), x="Expression gene A", y="Expression gene B")+
labs(fill = "Ma sd")
ggplot(df.all1, aes(x=P_mean_A, y=P_mean_B, z=ang_M))+
coord_fixed(ratio = 1, xlim = c(-1.25,1.25), ylim = c(-1.25,1.25), expand = TRUE, clip = "on")+
# stat_summary_2d(breaks = c(-1.25,-0.75, -0.25, 0.25, 0.75, 1.25), fun = st_dev_abs)+
stat_summary_2d(breaks = c(-1.25,-0.75, -0.25, 0.25, 0.75, 1.25), fun = Angle_Mean)+
scale_fill_viridis_c(option = "mako")+
geom_point(aes(y=0, x=0))+
labs(title = ("A/ Angle SD for different optimum \nphenotypes with no correlation of selection"), x="Expression gene A", y="Expression gene B")+
labs(fill = "Ma sd")
g2 <- ggplot(df.all1, aes(x=P_mean_A, y=P_mean_B, z=ang_M))+
coord_fixed(ratio = 1, xlim = c(-1.25,1.25), ylim = c(-1.25,1.25), expand = TRUE, clip = "on")+
# stat_summary_2d(breaks = c(-1.25,-0.75, -0.25, 0.25, 0.75, 1.25), fun = st_dev_abs)+
stat_summary_2d(breaks = c(-1.25,-0.75, -0.25, 0.25, 0.75, 1.25), fun = st_dev_abs)+
scale_fill_viridis_c(option = "mako")+
geom_point(aes(y=0, x=0))+
labs(title = ("A/ Angle SD for different optimum \nphenotypes with no correlation of selection"), x="Expression gene A", y="Expression gene B")+
labs(fill = "Ma sd")
ggplot(df.all1, aes(x=P_mean_A, y=P_mean_B, z=ang_M))+
coord_fixed(ratio = 1, xlim = c(-1.25,1.25), ylim = c(-1.25,1.25), expand = TRUE, clip = "on")+
# stat_summary_2d(breaks = c(-1.25,-0.75, -0.25, 0.25, 0.75, 1.25), fun = st_dev_abs)+
stat_summary_2d(breaks = c(-1.25,-0.75, -0.25, 0.25, 0.75, 1.25), fun = st_dev_abs)+
scale_fill_viridis_c(option = "mako")+
geom_point(aes(y=0, x=0))+
labs(title = ("A/ Angle SD for different optimum \nphenotypes with no correlation of selection"), x="Expression gene A", y="Expression gene B")+
labs(fill = "Ma sd")
ggplot(df.all1, aes(x=P_mean_A, y=P_mean_B, z=ang_S))+
coord_fixed(ratio = 1, xlim = c(-1.25,1.25), ylim = c(-1.25,1.25), expand = TRUE, clip = "on")+
# stat_summary_2d(breaks = c(-1.25,-0.75, -0.25, 0.25, 0.75, 1.25), fun = st_dev_abs)+
stat_summary_2d(breaks = c(-1.25,-0.75, -0.25, 0.25, 0.75, 1.25), fun = st_dev_abs)+
scale_fill_viridis_c(option = "mako")+
geom_point(aes(y=0, x=0))+
labs(title = ("A/ Angle SD for different optimum \nphenotypes with no correlation of selection"), x="Expression gene A", y="Expression gene B")+
labs(fill = "Ma sd")
ggplot(df.all1, aes(x=P_mean_A, y=P_mean_B, z=ang_M))+
coord_fixed(ratio = 1, xlim = c(-1.25,1.25), ylim = c(-1.25,1.25), expand = TRUE, clip = "on")+
# stat_summary_2d(breaks = c(-1.25,-0.75, -0.25, 0.25, 0.75, 1.25), fun = st_dev_abs)+
stat_summary_2d(breaks = c(-1.25,-0.75, -0.25, 0.25, 0.75, 1.25), fun = st_dev_abs)+
scale_fill_viridis_c(option = "mako")+
geom_point(aes(y=0, x=0))+
labs(title = ("A/ Angle SD for different optimum \nphenotypes with no correlation of selection"), x="Expression gene A", y="Expression gene B")+
labs(fill = "Ma sd")
ggplot(df.all1, aes(x=P_mean_A, y=P_mean_B, z=ang_M))+
coord_fixed(ratio = 1, xlim = c(-1.25,1.25), ylim = c(-1.25,1.25), expand = TRUE, clip = "on")+
# stat_summary_2d(breaks = c(-1.25,-0.75, -0.25, 0.25, 0.75, 1.25), fun = st_dev_abs)+
stat_summary_2d(breaks = c(-1.25,-0.75, -0.25, 0.25, 0.75, 1.25), fun = Angle_Mean)+
scale_fill_viridis_c(option = "mako")+
geom_point(aes(y=0, x=0))+
labs(title = ("A/ Angle SD for different optimum \nphenotypes with no correlation of selection"), x="Expression gene A", y="Expression gene B")+
labs(fill = "Ma sd")
pg
plot(g_mean)
plot(g_sd)
source("../functions_R/tools.R")
df.fig2
#Data
df.fig22 <- df.data(sims.dirs, pattern = "../../simul/fig_2/")
source("../functions_R/tools.R")
#Data
df.fig22 <- df.data(sims.dirs, pattern = "../../simul/fig_2/", variable="netw")
df.fig2 <- data.frame(NULL)
for (i in sims.dirs) {
sims.dir <- list.dirs(i)[2:length(list.dirs(i))]
df <- df.topo.raw(sims.dir, network=FALSE)
df[,9] <- modulo.all(df$ang_M-df$ang_S, modulo = modulo)
sq_rho <- round(mse.ms(df[,9]), 4)
pop <- str_split(i, "../../simul/fig_2/", n=2, simplify = TRUE)
df[,10] <- sprintf("%s", pop[,2])
df.fig2 <- rbind(df.fig2, df)
}
names(df.fig2)[names(df.fig2) == "V9"] <- "ang_diff"
names(df.fig2)[names(df.fig2) == "V10"] <- "netw"
View(df.fig22)
modulo <- pi
df.fig2 <- data.frame(NULL)
for (i in sims.dirs) {
sims.dir <- list.dirs(i)[2:length(list.dirs(i))]
df <- df.topo.raw(sims.dir, network=FALSE)
df[,9] <- modulo.all(df$ang_M-df$ang_S, modulo = modulo)
sq_rho <- round(mse.ms(df[,9]), 4)
pop <- str_split(i, "../../simul/fig_2/", n=2, simplify = TRUE)
df[,10] <- sprintf("%s", pop[,2])
df.fig2 <- rbind(df.fig2, df)
}
names(df.fig2)[names(df.fig2) == "V9"] <- "ang_diff"
names(df.fig2)[names(df.fig2) == "V10"] <- "netw"
df.popsize <- df.data(sims.dirs, pattern = "../../simul/supp_data/popsize/se0_p", variable="pops")
########################################################################################################################
sims.dir.pop <- list.dirs(
"../../simul/supp_data/popsize", recursive = FALSE
)
of        <- "supp_data2"
modulo <- pi
#####################
df.popsize <- df.data(sims.dir.pop, pattern = "../../simul/supp_data/popsize/se0_p", variable="pops")
View(df.popsize)
df.data <- function(sims.dirs, modulo=pi, pattern="../../simul/", variable="population"){
df.datas <- data.frame(NULL)
for (i in sims.dirs) {
sims.dir <- list.dirs(i)[2:length(list.dirs(i))]
df <- df.topo.raw(sims.dir, network=FALSE)
df[,9] <- modulo.all(df$ang_M-df$ang_S, modulo = pi)
sq_rho <- round(mse.ms(df[,9]), 4)
pop <- str_split(i, pattern, n=2, simplify = TRUE)
df[,10] <- sprintf("%s", pop[,2])
df.datas <- rbind(df.datas, df)
}
names(df.datas)[names(df.datas) == "V9"] <- "ang_diff"
names(df.datas)[names(df.datas) == "V10"] <- variable
return(df.datas)
}
df.data <- function(sims.dirs, modulo=pi, pattern="../../simul/", variable="population"){
df.datas <- data.frame(NULL)
for (i in sims.dirs) {
sims.dir <- list.dirs(i)[2:length(list.dirs(i))]
df <- df.topo.raw(sims.dir, network=FALSE)
df[,9] <- modulo.all(df$ang_M-df$ang_S, modulo = modulo)
sq_rho <- round(mse.ms(df[,9]), 4)
pop <- str_split(i, pattern, n=2, simplify = TRUE)
df[,10] <- sprintf("%s", pop[,2])
df.datas <- rbind(df.datas, df)
}
names(df.datas)[names(df.datas) == "V9"] <- "ang_diff"
names(df.datas)[names(df.datas) == "V10"] <- variable
return(df.datas)
}
df.popsize <- df.data(sims.dir.pop, pattern = "../../simul/supp_data/popsize/se0_p", variable="pops")
pp <- ggplot(data=df.popsize, aes(ang_S, ang_M,col=pops))+
coord_fixed(ratio = 1, xlim = c(-pi/2,pi/2), ylim = c(-pi/2,pi/2), expand = TRUE, clip = "on")+
geom_abline()+
labs(title = ("A/ M angle distribution and mean for different S angle"), y="M Angle", x="S Angle")+
# geom_smooth(aes(fill=pops), alpha = 0, method = "AngleSmooth", span=0.9, level = 0.95)+
geom_point(aes(y=mean_ang_M, fill=pops), show.legend = FALSE)+
stat_summary(geom = "linerange", position = "identity", fun.data = st_dev_angle, size=3, alpha=0.2, show.legend = FALSE)
pp <- fracAx(p=pp, y=TRUE, "pi")
pp <- pp + facet_wrap(vars(pops), ncol=2)
pp
View(df.popsize)
pp <- ggplot(data=df.popsize, aes(ang_S, ang_M,col=pops))+
coord_fixed(ratio = 1, xlim = c(-pi/2,pi/2), ylim = c(-pi/2,pi/2), expand = TRUE, clip = "on")+
geom_abline()+
labs(title = ("A/ M angle distribution and mean for different S angle"), y="M Angle", x="S Angle")+
# geom_smooth(aes(fill=pops), alpha = 0, method = "AngleSmooth", span=0.9, level = 0.95)+
geom_point(aes(y=mean_ang_M, fill=pops), show.legend = FALSE)+
stat_summary(geom = "linerange", position = "identity", fun.data = st_dev_angle, size=3, alpha=0.2, show.legend = FALSE)
pp <- fracAx(p=pp, y=TRUE, "pi")
pp <- pp + facet_wrap(vars(pops), ncol=2)
source("../functions_R/tools.R")
source("../functions_R/network.R")
source("../functions_R/ggplot2_custom_functions.R")
pp <- ggplot(data=df.popsize, aes(ang_S, ang_M,col=pops))+
coord_fixed(ratio = 1, xlim = c(-pi/2,pi/2), ylim = c(-pi/2,pi/2), expand = TRUE, clip = "on")+
geom_abline()+
labs(title = ("A/ M angle distribution and mean for different S angle"), y="M Angle", x="S Angle")+
# geom_smooth(aes(fill=pops), alpha = 0, method = "AngleSmooth", span=0.9, level = 0.95)+
geom_point(aes(y=mean_ang_M, fill=pops), show.legend = FALSE)+
stat_summary(geom = "linerange", position = "identity", fun.data = st_dev_angle, size=3, alpha=0.2, show.legend = FALSE)
pp <- fracAx(p=pp, y=TRUE, "pi")
pp <- pp + facet_wrap(vars(pops), ncol=2)
pp
source("../functions_R/network.R")
source("../functions_R/tools.R")
source("../functions_R/ggplot2_custom_functions.R")
df.popsize <- df.data(sims.dir.pop, pattern = "../../simul/supp_data/popsize/se0_p", variable="pops")
pp <- ggplot(data=df.popsize, aes(ang_S, ang_M,col=pops))+
coord_fixed(ratio = 1, xlim = c(-pi/2,pi/2), ylim = c(-pi/2,pi/2), expand = TRUE, clip = "on")+
geom_abline()+
labs(title = ("A/ M angle distribution and mean for different S angle"), y="M Angle", x="S Angle")+
# geom_smooth(aes(fill=pops), alpha = 0, method = "AngleSmooth", span=0.9, level = 0.95)+
geom_point(aes(y=mean_ang_M, fill=pops), show.legend = FALSE)+
stat_summary(geom = "linerange", position = "identity", fun.data = st_dev_angle, size=3, alpha=0.2, show.legend = FALSE)
pp <- fracAx(p=pp, y=TRUE, "pi")
pp <- pp + facet_wrap(vars(pops), ncol=2)
pp
View(df)
View(df)
View(df.all1)
