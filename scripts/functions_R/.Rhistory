pls1$cor.xyt
g1 <- ggplot(df, aes(x=B_A, y=A_B, col=M_direction))+
coord_fixed(ratio =1, ylim = c(-0.5,0.5), xlim = c(-0.5,0.5), expand = FALSE, clip = "on")+
geom_point()+
scale_color_gradientn(colours = c("yellow", "red", "blue", "yellow"), limits=c(-pi/2, pi/2), breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))+
ggtitle("B/ Regulation between A and B")+
theme_bw()
# pdf("../../figures/PLS.pdf", width=7, height=7)
# pdf("../../figures/PLS.pdf", width=10, height=7)
# layout(t(1:2))
# par(mfrow = c(1, 2))
# for (i in sims.dirs) {
plot(pls1, what="variables", main = "A/ PLS: Cercle of Correlations")
sims.dirs <- c("../../simul/fig_3/3-full_0_fixed")
of        <- "PLS_ACP_topo2"
what      <- "angle" #"angle" or "ecc"
where     <- "cercle"
#######################
df.topo <- df.data(sims.dirs, pattern = "../../simul/fig_3/", variable="netw", file_size=220000, w_of_6=TRUE, network=TRUE)
dfx <- df.topo[,11:46]
dfy <- as.data.frame(df.topo$ang_M)
df <-as.data.frame(cbind(dfx,dfy))
df[] <- lapply( df, as.numeric)
df <- df.topo[,11:46]
df$M_direction <- df.topo$ang_M
df[] <- lapply( df, as.numeric)
pls1 = plsreg1( df[,c(3:6, 9:14, 16:21, 23:28, 30:35)], df[,37, drop = FALSE], comps = 2)
summary(pls1)
pls1$cor.xyt
g1 <- ggplot(df, aes(x=B_A, y=A_B, col=M_direction))+
coord_fixed(ratio =1, ylim = c(-0.5,0.5), xlim = c(-0.5,0.5), expand = FALSE, clip = "on")+
geom_point()+
scale_color_gradientn(colours = c("yellow", "red", "blue", "yellow"), limits=c(-pi/2, pi/2), breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))+
ggtitle("B/ Regulation between A and B")+
theme_bw()
# pdf("../../figures/PLS.pdf", width=7, height=7)
# pdf("../../figures/PLS.pdf", width=10, height=7)
# layout(t(1:2))
# par(mfrow = c(1, 2))
# for (i in sims.dirs) {
plot(pls1, what="variables", main = "A/ PLS: Cercle of Correlations")
#######################
sims.dirs <- c("../../simul/fig_3/2-full_0.5_fixed")
of        <- "PLS_ACP_topo2"
what      <- "angle" #"angle" or "ecc"
where     <- "cercle"
#######################
df.topo <- df.data(sims.dirs, pattern = "../../simul/fig_3/", variable="netw", file_size=220000, w_of_6=TRUE, network=TRUE)
dfx <- df.topo[,11:46]
dfy <- as.data.frame(df.topo$ecc_M)
df <-as.data.frame(cbind(dfx,dfy))
df[] <- lapply( df, as.numeric)
df <- df.topo[,11:46]
df$M_direction <- df.topo$ecc_M
df[] <- lapply( df, as.numeric)
pls1 = plsreg1( df[,c(3:6, 9:14, 16:21, 23:28, 30:35)], df[,37, drop = FALSE], comps = 2)
summary(pls1)
pls1$cor.xyt
g1 <- ggplot(df, aes(x=B_A, y=A_B, col=M_ecc))+
coord_fixed(ratio =1, ylim = c(-0.5,0.5), xlim = c(-0.5,0.5), expand = FALSE, clip = "on")+
geom_point()+
scale_color_gradientn(colours = c("yellow", "red", "blue", "yellow"), limits=c(-pi/2, pi/2), breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))+
ggtitle("B/ Regulation between A and B")+
theme_bw()
# pdf("../../figures/PLS.pdf", width=7, height=7)
# pdf("../../figures/PLS.pdf", width=10, height=7)
# layout(t(1:2))
# par(mfrow = c(1, 2))
# for (i in sims.dirs) {
plot(pls1, what="variables", main = "A/ PLS: Cercle of Correlations")
#######################
sims.dirs <- c("../../simul/fig_3/1-full_-0.5_fixed")
of        <- "PLS_ACP_topo2"
what      <- "angle" #"angle" or "ecc"
where     <- "cercle"
#######################
df.topo <- df.data(sims.dirs, pattern = "../../simul/fig_3/", variable="netw", file_size=220000, w_of_6=TRUE, network=TRUE)
dfx <- df.topo[,11:46]
dfy <- as.data.frame(df.topo$ecc_M)
df <-as.data.frame(cbind(dfx,dfy))
df[] <- lapply( df, as.numeric)
df <- df.topo[,11:46]
df$M_direction <- df.topo$ecc_M
df[] <- lapply( df, as.numeric)
pls1 = plsreg1( df[,c(3:6, 9:14, 16:21, 23:28, 30:35)], df[,37, drop = FALSE], comps = 2)
summary(pls1)
pls1$cor.xyt
g1 <- ggplot(df, aes(x=B_A, y=A_B, col=M_ecc))+
coord_fixed(ratio =1, ylim = c(-0.5,0.5), xlim = c(-0.5,0.5), expand = FALSE, clip = "on")+
geom_point()+
scale_color_gradientn(colours = c("yellow", "red", "blue", "yellow"), limits=c(-pi/2, pi/2), breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))+
ggtitle("B/ Regulation between A and B")+
theme_bw()
# pdf("../../figures/PLS.pdf", width=7, height=7)
# pdf("../../figures/PLS.pdf", width=10, height=7)
# layout(t(1:2))
# par(mfrow = c(1, 2))
# for (i in sims.dirs) {
plot(pls1, what="variables", main = "A/ PLS: Cercle of Correlations")
1- df.topo$ecc_M
df$M_direction <- 1- df.topo$ecc_M
df[] <- lapply( df, as.numeric)
pls1 = plsreg1( df[,c(3:6, 9:14, 16:21, 23:28, 30:35)], df[,37, drop = FALSE], comps = 2)
summary(pls1)
pls1$cor.xyt
g1 <- ggplot(df, aes(x=B_A, y=A_B, col=M_ecc))+
coord_fixed(ratio =1, ylim = c(-0.5,0.5), xlim = c(-0.5,0.5), expand = FALSE, clip = "on")+
geom_point()+
scale_color_gradientn(colours = c("yellow", "red", "blue", "yellow"), limits=c(-pi/2, pi/2), breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))+
ggtitle("B/ Regulation between A and B")+
theme_bw()
# pdf("../../figures/PLS.pdf", width=7, height=7)
# pdf("../../figures/PLS.pdf", width=10, height=7)
# layout(t(1:2))
# par(mfrow = c(1, 2))
# for (i in sims.dirs) {
plot(pls1, what="variables", main = "A/ PLS: Cercle of Correlations")
source("../functions_R/All_functions.R")
library(png)
#With eccentricity
pfig3 <- ggplot(data=df.fig3, aes(ang_S, ang_M))+
coord_fixed(ratio = 1, xlim = c(-1.5,1.5), ylim = c(-pi/2-0.2,pi/2+0.2), expand = TRUE, clip = "on")+
geom_abline(colour="#666666")+
geom_abline(intercept=pi, colour="#666666")+
geom_abline(intercept=-pi, colour="#666666")+
geom_point(aes(y=ang_M, col=1-ecc_M), alpha=0.16, show.legend = FALSE)+
geom_point(aes(y=ang_M_mpi, col=1-ecc_M), alpha=0.16, show.legend = FALSE)+
geom_point(aes(y=ang_M_ppi, col=1-ecc_M), alpha=0.16, show.legend = TRUE)+
labs(y="M direction", x="S direction", fill = expression("\u03BE\u03B1"))+
scale_color_viridis_c(option = "plasma")+
labs(col = "M Eccentricity")+
scale_x_continuous(breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),
labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))+
scale_y_continuous(breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),
labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))
pfig3 <- pfig3 + facet_wrap(pop ~., labeller = as_labeller(netw_names),  ncol=3) +
theme(strip.background = element_blank(), plot.margin = unit(c(3, 3, 3, 3), "cm"))+ theme_bw() #, strip.text = element_blank()
pfig3
netw_names <- as_labeller(c(
`1-full_-0.5_fixed` = "A/ AB regulation fixed at -0.5",
`4-full_-0.5` = "D/ AB regulation starting at -0.5",
`3-full_0_fixed` = "C/ AB regulation fixed at 0",
`5-full_0.5` = "E/ AB regulation starting at 0.5",
`2-full_0.5_fixed` = "B/ AB regulation fixed at 0.5"
))
pfig3 <- ggplot(data=df.fig3, aes(ang_S, ang_M))+
coord_fixed(ratio = 1, xlim = c(-1.5,1.5), ylim = c(-pi/2-0.2,pi/2+0.2), expand = TRUE, clip = "on")+
geom_abline(colour="#666666")+
geom_abline(intercept=pi, colour="#666666")+
geom_abline(intercept=-pi, colour="#666666")+
geom_point(aes(y=ang_M, col=1-ecc_M), alpha=0.16, show.legend = FALSE)+
geom_point(aes(y=ang_M_mpi, col=1-ecc_M), alpha=0.16, show.legend = FALSE)+
geom_point(aes(y=ang_M_ppi, col=1-ecc_M), alpha=0.16, show.legend = TRUE)+
labs(y="M direction", x="S direction", fill = expression("\u03BE\u03B1"))+
scale_color_viridis_c(option = "plasma")+
labs(col = "M Eccentricity")+
scale_x_continuous(breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),
labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))+
scale_y_continuous(breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),
labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))
pfig3 <- pfig3 + facet_wrap(pop ~., labeller = as_labeller(netw_names),  ncol=3) +
theme(strip.background = element_blank(), plot.margin = unit(c(3, 3, 3, 3), "cm"))+ theme_bw() #, strip.text = element_blank()
pfig3
pfig3 <- ggplot(data=df.fig3, aes(ang_S, ang_M))+
coord_fixed(ratio = 1, xlim = c(-1.5,1.5), ylim = c(-pi/2-0.2,pi/2+0.2), expand = TRUE, clip = "on")+
geom_abline(colour="#666666")+
geom_abline(intercept=pi, colour="#666666")+
geom_abline(intercept=-pi, colour="#666666")+
geom_point(aes(y=ang_M, col=1-ecc_M), alpha=0.16, show.legend = FALSE)+
geom_point(aes(y=ang_M_mpi, col=1-ecc_M), alpha=0.16, show.legend = FALSE)+
geom_point(aes(y=ang_M_ppi, col=1-ecc_M), alpha=0.16, show.legend = TRUE)+
labs(y="M direction", x="S direction", fill = expression("\u03BE\u03B1"))+
scale_color_viridis_c(option = "plasma")+
labs(col = "M Eccentricity")+
scale_x_continuous(breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),
labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))+
scale_y_continuous(breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),
labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))
pfig3 <- pfig3 + facet_wrap(pop ~., labeller = as_labeller(netw_names),  ncol=3) +
theme(strip.background = element_blank(), plot.margin = unit(c(10, 3, 3, 3), "cm"))+ theme_bw() #, strip.text = element_blank()
pfig3
pfig3 <- ggplot(data=df.fig3, aes(ang_S, ang_M))+
coord_fixed(ratio = 1, xlim = c(-1.5,1.5), ylim = c(-pi/2-0.2,pi/2+0.2), expand = TRUE, clip = "on")+
geom_abline(colour="#666666")+
geom_abline(intercept=pi, colour="#666666")+
geom_abline(intercept=-pi, colour="#666666")+
geom_point(aes(y=ang_M, col=1-ecc_M), alpha=0.16, show.legend = FALSE)+
geom_point(aes(y=ang_M_mpi, col=1-ecc_M), alpha=0.16, show.legend = FALSE)+
geom_point(aes(y=ang_M_ppi, col=1-ecc_M), alpha=0.16, show.legend = TRUE)+
labs(y="M direction", x="S direction", fill = expression("\u03BE\u03B1"))+
scale_color_viridis_c(option = "plasma")+
labs(col = "M Eccentricity")+
scale_x_continuous(breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),
labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))+
scale_y_continuous(breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),
labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))
pfig3 <- pfig3 + facet_wrap(pop ~., labeller = as_labeller(netw_names),  ncol=3) +
theme(strip.background = element_blank())+ theme_bw(plot.margin = unit(c(10, 3, 3, 3), "cm")) #, strip.text = element_blank()
pfig3
pfig3 <- ggplot(data=df.fig3, aes(ang_S, ang_M))+
coord_fixed(ratio = 1, xlim = c(-1.5,1.5), ylim = c(-pi/2-0.2,pi/2+0.2), expand = TRUE, clip = "on")+
geom_abline(colour="#666666")+
geom_abline(intercept=pi, colour="#666666")+
geom_abline(intercept=-pi, colour="#666666")+
geom_point(aes(y=ang_M, col=1-ecc_M), alpha=0.16, show.legend = FALSE)+
geom_point(aes(y=ang_M_mpi, col=1-ecc_M), alpha=0.16, show.legend = FALSE)+
geom_point(aes(y=ang_M_ppi, col=1-ecc_M), alpha=0.16, show.legend = TRUE)+
labs(y="M direction", x="S direction", fill = expression("\u03BE\u03B1"))+
scale_color_viridis_c(option = "plasma")+
labs(col = "M Eccentricity")+
scale_x_continuous(breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),
labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))+
scale_y_continuous(breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),
labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))
pfig3 <- pfig3 + facet_wrap(pop ~., labeller = as_labeller(netw_names),  ncol=3) +
theme_bw()+ theme(strip.background = element_blank(), plot.margin = unit(c(10, 3, 3, 3), "cm")) #, strip.text = element_blank()
pfig3
pfig3 <- ggplot(data=df.fig3, aes(ang_S, ang_M))+
coord_fixed(ratio = 1, xlim = c(-1.5,1.5), ylim = c(-pi/2-0.2,pi/2+0.2), expand = TRUE, clip = "on")+
geom_abline(colour="#666666")+
geom_abline(intercept=pi, colour="#666666")+
geom_abline(intercept=-pi, colour="#666666")+
geom_point(aes(y=ang_M, col=1-ecc_M), alpha=0.16, show.legend = FALSE)+
geom_point(aes(y=ang_M_mpi, col=1-ecc_M), alpha=0.16, show.legend = FALSE)+
geom_point(aes(y=ang_M_ppi, col=1-ecc_M), alpha=0.16, show.legend = TRUE)+
labs(y="M direction", x="S direction", fill = expression("\u03BE\u03B1"))+
scale_color_viridis_c(option = "plasma")+
labs(col = "M Eccentricity")+
scale_x_continuous(breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),
labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))+
scale_y_continuous(breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),
labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))
pfig3 <- pfig3 + facet_wrap(pop ~., labeller = as_labeller(netw_names),  ncol=3) +
theme_bw()+ theme(strip.background = element_blank(), plot.margin = unit(c(5, 0, 0, 0), "cm")) #, strip.text = element_blank()
pfig3
pfig3 <- ggplot(data=df.fig3, aes(ang_S, ang_M))+
coord_fixed(ratio = 1, xlim = c(-1.5,1.5), ylim = c(-pi/2-0.2,pi/2+0.2), expand = TRUE, clip = "on")+
geom_abline(colour="#666666")+
geom_abline(intercept=pi, colour="#666666")+
geom_abline(intercept=-pi, colour="#666666")+
geom_point(aes(y=ang_M, col=1-ecc_M), alpha=0.16, show.legend = FALSE)+
geom_point(aes(y=ang_M_mpi, col=1-ecc_M), alpha=0.16, show.legend = FALSE)+
geom_point(aes(y=ang_M_ppi, col=1-ecc_M), alpha=0.16, show.legend = TRUE)+
labs(y="M direction", x="S direction", fill = expression("\u03BE\u03B1"))+
scale_color_viridis_c(option = "plasma")+
labs(col = "M Eccentricity")+
scale_x_continuous(breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),
labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))+
scale_y_continuous(breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),
labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))
pfig3 <- pfig3 + facet_wrap(pop ~., labeller = as_labeller(netw_names),  ncol=3) +
theme_bw()+ theme(strip.background = element_blank(), plot.margin = unit(c(3, 0, 0, 0), "cm")) #, strip.text = element_blank()
pfig3
png.netw1 = readPNG('../../templates/fig_3/networks.png')
cairo_pdf("../../figures/fig_3.pdf", width=10, height=10)
grid.arrange(
pfig3,
ncol = 1,
nrow = 1,
widths = c(1),
clip = FALSE,
grid.raster(png.netw1, x=0.5, y=0.8, width=0.95)
)
dev.off()
cairo_pdf("../../figures/fig_3.pdf", width=10, height=10)
grid.arrange(
pfig3,
ncol = 1,
nrow = 1,
widths = c(1),
clip = FALSE,
grid.raster(png.netw1, x=0.5, y=0.8, width=0.95)
)
dev.off()
cairo_pdf("../../figures/fig_3.pdf", width=10, height=10)
grid.arrange(
pfig3,
ncol = 1,
nrow = 1,
widths = c(1),
clip = FALSE,
)
grid.raster(png.netw1, x=0.5, y=0.8, width=0.95)
dev.off()
cairo_pdf("../../figures/fig_3.pdf", width=10, height=10)
grid.arrange(
pfig3,
ncol = 1,
nrow = 1,
widths = c(1),
clip = FALSE
)
grid.raster(png.netw1, x=0.5, y=0.8, width=0.95)
dev.off()
cairo_pdf("../../figures/fig_3.pdf", width=10, height=10)
grid.arrange(
pfig3,
ncol = 1,
nrow = 1,
widths = c(1),
clip = FALSE
)
grid.raster(png.netw1, x=0.5, y=0.8, width=0.8)
dev.off()
cairo_pdf("../../figures/fig_3.pdf", width=10, height=10)
grid.arrange(
pfig3,
ncol = 1,
nrow = 1,
widths = c(1),
clip = FALSE
)
grid.raster(png.netw1, x=0.45, y=0.9, width=0.8)
dev.off()
pfig3 <- ggplot(data=df.fig3, aes(ang_S, ang_M))+
coord_fixed(ratio = 1, xlim = c(-1.5,1.5), ylim = c(-pi/2-0.2,pi/2+0.2), expand = TRUE, clip = "on")+
geom_abline(colour="#666666")+
geom_abline(intercept=pi, colour="#666666")+
geom_abline(intercept=-pi, colour="#666666")+
geom_point(aes(y=ang_M, col=1-ecc_M), alpha=0.16, show.legend = FALSE)+
geom_point(aes(y=ang_M_mpi, col=1-ecc_M), alpha=0.16, show.legend = FALSE)+
geom_point(aes(y=ang_M_ppi, col=1-ecc_M), alpha=0.16, show.legend = TRUE)+
labs(y="M direction", x="S direction", fill = expression("\u03BE\u03B1"))+
scale_color_viridis_c(option = "plasma")+
labs(col = "M Eccentricity")+
scale_x_continuous(breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),
labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))+
scale_y_continuous(breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),
labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))
pfig3 <- pfig3 + facet_wrap(pop ~., labeller = as_labeller(netw_names),  ncol=3) +
theme_bw()+ theme(strip.background = element_blank(), plot.margin = unit(c(2, 0, 0, 0), "cm")) #, strip.text = element_blank()
pfig3
cairo_pdf("../../figures/fig_3.pdf", width=10, height=10)
grid.arrange(
pfig3,
ncol = 1,
nrow = 1,
widths = c(1),
clip = FALSE
)
grid.raster(png.netw1, x=0.45, y=0.9, width=0.7)
dev.off()
cairo_pdf("../../figures/fig_3.pdf", width=10, height=10)
grid.arrange(
pfig3,
ncol = 1,
nrow = 1,
widths = c(1),
clip = FALSE
)
grid.raster(png.netw1, x=0.46, y=0.9, width=0.7)
dev.off()
pfig3 <- ggplot(data=df.fig3, aes(ang_S, ang_M))+
coord_fixed(ratio = 1, xlim = c(-1.5,1.5), ylim = c(-pi/2-0.2,pi/2+0.2), expand = TRUE, clip = "on")+
geom_abline(colour="#666666")+
geom_abline(intercept=pi, colour="#666666")+
geom_abline(intercept=-pi, colour="#666666")+
geom_point(aes(y=ang_M, col=1-ecc_M), alpha=0.16, show.legend = FALSE)+
geom_point(aes(y=ang_M_mpi, col=1-ecc_M), alpha=0.16, show.legend = FALSE)+
geom_point(aes(y=ang_M_ppi, col=1-ecc_M), alpha=0.16, show.legend = TRUE)+
labs(y="M direction", x="S direction", fill = expression("\u03BE\u03B1"))+
scale_color_viridis_c(option = "plasma")+
labs(col = "M Eccentricity")+
scale_x_continuous(breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),
labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))+
scale_y_continuous(breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),
labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))
pfig3 <- pfig3 + facet_wrap(pop ~., labeller = as_labeller(netw_names),  ncol=3) +
theme_bw()+ theme(plot.margin = unit(c(2, 0, 0, 0), "cm")) #, strip.text = element_blank()
pfig3
cairo_pdf("../../figures/fig_3.pdf", width=10, height=10)
grid.arrange(
pfig3,
ncol = 1,
nrow = 1,
widths = c(1),
clip = FALSE
)
grid.raster(png.netw1, x=0.46, y=0.9, width=0.7)
dev.off()
cairo_pdf("../../figures/fig_3.pdf", width=10, height=8.5)
grid.arrange(
pfig3,
ncol = 1,
nrow = 1,
widths = c(1),
clip = FALSE
)
grid.raster(png.netw1, x=0.46, y=0.9, width=0.7)
dev.off()
pfig3 <- ggplot(data=df.fig3, aes(ang_S, ang_M))+
coord_fixed(ratio = 1, xlim = c(-1.5,1.5), ylim = c(-pi/2-0.2,pi/2+0.2), expand = TRUE, clip = "on")+
geom_abline(colour="#666666")+
geom_abline(intercept=pi, colour="#666666")+
geom_abline(intercept=-pi, colour="#666666")+
geom_point(aes(y=ang_M, col=1-ecc_M), alpha=0.16, show.legend = FALSE)+
geom_point(aes(y=ang_M_mpi, col=1-ecc_M), alpha=0.16, show.legend = FALSE)+
geom_point(aes(y=ang_M_ppi, col=1-ecc_M), alpha=0.16, show.legend = TRUE)+
labs(y="M direction", x="S direction", fill = expression("\u03BE\u03B1"))+
scale_color_viridis_c(option = "plasma")+
labs(col = "M Eccentricity")+
scale_x_continuous(breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),
labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))+
scale_y_continuous(breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),
labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))
pfig3 <- pfig3 + facet_wrap(pop ~., labeller = as_labeller(netw_names),  ncol=3) +
theme_bw()+ theme(plot.margin = unit(c(3, 0, 0, 0), "cm")) #, strip.text = element_blank()
pfig3
png.netw1 = readPNG('../../templates/fig_3/networks.png')
cairo_pdf("../../figures/fig_3.pdf", width=10, height=9)
grid.arrange(
pfig3,
ncol = 1,
nrow = 1,
widths = c(1),
clip = FALSE
)
grid.raster(png.netw1, x=0.46, y=0.9, width=0.7)
dev.off()
cairo_pdf("../../figures/fig_3.pdf", width=10, height=9)
grid.arrange(
pfig3,
ncol = 1,
nrow = 1,
widths = c(1),
clip = FALSE
)
grid.raster(png.netw1, x=0.46, y=0.93, width=0.7)
dev.off()
cairo_pdf("../../figures/fig_3.pdf", width=10, height=9)
grid.arrange(
pfig3,
ncol = 1,
nrow = 1,
widths = c(1),
clip = FALSE
)
grid.raster(png.netw1, x=0.46, y=0.92, width=0.7)
dev.off()
cairo_pdf("../../figures/fig_3.pdf", width=10, height=9)
grid.arrange(
pfig3,
ncol = 1,
nrow = 1,
widths = c(1),
clip = FALSE
)
grid.raster(png.netw1, x=0.46, y=0.92, width=0.7)
dev.off()
png.netw1 = readPNG('../../templates/fig_3/networks.png')
cairo_pdf("../../figures/fig_3.pdf", width=10, height=9)
grid.arrange(
pfig3,
ncol = 1,
nrow = 1,
widths = c(1),
clip = FALSE
)
grid.raster(png.netw1, x=0.46, y=0.92, width=0.7)
dev.off()
source("../functions_R/All_functions.R")
#########################################
sims.dirs <- list.dirs("../../simul/fig_1", recursive = FALSE)
angle = c(0.785, 0, -0.393)
of        <- "fig1"
modulo <- pi
#####################
M.factor <- 1500
G.factor <- 0.25
S.factor <- 1
#Df with generations
df.m.s.gen <- data.frame()
for (i in angle) {
sims.dir  <- list.files(path=sims.dirs, pattern=sprintf("angle%s.parangle", i), full.names=TRUE)
df <- df.fig1(sims.dir, all.gen=TRUE)
pop <- str_split(df$data.dir, "../../simul/fig_1/", n=2, simplify = TRUE)
df[,9] <- sprintf("%s", pop[,2])
model <- str_split(pop[,2], "/simuangle", n=2, simplify = TRUE)
df[,10] <- sprintf("%s", model[,1])
df.m.s.gen <- rbind(df.m.s.gen, df)
}
df.m <- subset(df.m.s.gen, V10 == "m") #Df of Multilinear simulations
df.w <- subset(df.m.s.gen, V10 == "w") #Df of Wagner simulations
colors <- c("darkblue", "yellowgreen")
cairo_pdf("../../figures/fig1.pdf", width=6.5, height=8)
laymat <- matrix(c(1, 3, 5, 2, 4, 6), nrow = 3, ncol = 2)
layout(mat = laymat) # Widths of the two columns
legend <- TRUE
for (i in angle) {
sims.dir  <- list.files(path=sims.dirs, pattern=sprintf("angle%s.parangle", i), full.names=TRUE)
par(mar = c(3.2, 3 , 0.2, 1))
oneplot.allellipse(sims.dir, G.factor=G.factor, S.factor=S.factor, M.factor=M.factor,
# main= paste0("\u03BE", "\u03B1", sprintf(" : m = %s, w = %s", mse.m, mse.w)),
xlim=c(-7,7), ylim=c(-7,7), all.reps=FALSE,
yaxt = "n", xaxt = "n", mgp = c(1, 1, 0), legend=legend, asp=1)
dfang1 <- subset(df.m.s.gen, round(ang_S, 1) == round(i, 1))
dfm <- subset(df.m, round(ang_S, 1) == round(i, 1))
dfw <- subset(df.w, round(ang_S, 1) == round(i, 1))
plot(dfang1$Gen, dfang1$ang_M, ylim =c(-pi/2,pi/2), xlim = c(min(dfang1$Gen), max(dfang1$Gen)),
main="", yaxt="n", ylab = "M direction", xlab = "Generations", col=alpha(colors[factor(dfang1$V10)],0.2), mgp = c(1.75, 0.75, 0))
# lines(lowess(dfm$Gen, dfm$ang_M), col="darkblue", lwd = 3) #add local regression
# lines(lowess(dfw$Gen, dfw$ang_M), col="yellowgreen", lwd = 3)
df500 <- subset(dfang1, Gen >= 500)
bymodel <- by(df500$ang_M, list(df500$Gen, df500$V10), FUN=mean.angle.pi)
lines(as.numeric(rownames(bymodel)), bymodel[,"m"], col="darkblue", lwd = 3)
lines(as.numeric(rownames(bymodel)), bymodel[,"w"], col="yellowgreen", lwd = 3)
lines(dfang1$Gen, dfang1$ang_S, col="orange", type = "l", lty=3, lwd = 2) #S orientation
axis(side=2, at=c(-pi, -pi/2, -pi/4, 0 , pi/4, pi/2, pi), labels=expression(-pi, -pi/2, -pi/4, 0, pi/4, pi/2, pi), mgp = c(1.75, 0.75, 0))
legend <- FALSE
}
dev.off()
print("Ellipses done !")
