data = df.fig4,
x = pop,
y = corr,
centrality.plotting=FALSE,
plot.type = "box",
ggtheme = ggplot2::theme_bw()+theme(plot.margin = unit(c(0, 0, 3.3, 0), "cm")),
pairwise.comparisons=FALSE,
bf.message=FALSE,
results.subtitle=FALSE,
xlab="", ylab="Mutational correlation (rM)",
title = NULL
)
plt
ggbetweenstats(
data = df.fig4,
x = pop,
y = corr,
centrality.plotting=FALSE,
plot.type = "box",
ggtheme = ggplot2::theme_bw()+theme(plot.margin = unit(c(0, 0, 3.3, 0), "cm"))+
scale_x_discrete(labels = c('Full Network','Direct only','1 intermediate','2 intermediate','3 intermediate')),
pairwise.comparisons=FALSE,
bf.message=FALSE,
results.subtitle=FALSE,
xlab="", ylab="Mutational correlation (rM)",
title = NULL
)
?ggbetweenstats
plt <- ggbetweenstats(
data = df.fig4,
x = pop,
y = corr,
centrality.plotting=FALSE,
plot.type = "box",
ggtheme = ggplot2::theme_bw()+theme(plot.margin = unit(c(0, 0, 3.3, 0), "cm")),
ggplot.component = scale_x_discrete(labels = c('Full Network','Direct only','1 intermediate','2 intermediate','3 intermediate')),
pairwise.comparisons=FALSE,
bf.message=FALSE,
results.subtitle=FALSE,
xlab="", ylab="Mutational correlation (rM)",
title = NULL
)
plt
png.netw1 = readPNG('../../templates/fig_4/networks_fig4.png')
cairo_pdf("../../figures/fig_distances.pdf", width=7, height=5.8)
grid.arrange(
plt,
ncol = 1,
nrow = 1,
widths = c(1),
clip = FALSE
)
grid.raster(png.netw1, x=0.54, y=0.13, width=0.9)
dev.off()
source("../functions_R/All_functions.R")
library(png)
#####################
sims.dirs <- list.dirs("../../simul/fig_3", recursive = FALSE)
modulo <- pi
#####################
#Data
df.fig3 <- df.data(sims.dirs, pattern = "../../simul/fig_3/", variable="netw", file_size=15000, w_of_6=TRUE, network=FALSE)
netw_names <- as_labeller(c(
`1-full_-0.5_fixed` = "A/ AB regulation fixed at -0.5",
`3-full_0_fixed` = "C/ AB regulation fixed at 0",
`2-full_0.5_fixed` = "B/ AB regulation fixed at 0.5"
))
#With eccentricity
pfig3 <- ggplot(data=df.fig3, aes(ang_S, ang_M))+
coord_fixed(ratio = 1, xlim = c(-1.5,1.5), ylim = c(-pi/2-0.2,pi/2+0.2), expand = TRUE, clip = "on")+
geom_abline(colour="#666666")+
geom_abline(intercept=pi, colour="#666666")+
geom_abline(intercept=-pi, colour="#666666")+
geom_point(aes(y=ang_M, col=ecc_M), alpha=0.2, show.legend = FALSE)+
geom_point(aes(y=ang_M_mpi, col=ecc_M), alpha=0.2, show.legend = FALSE)+
geom_point(aes(y=ang_M_ppi, col=ecc_M), alpha=0.2, show.legend = TRUE)+
labs(y=expression(paste(alpha, "M")), x=expression(paste(alpha, "S")), fill = expression("\u03BE\u03B1"))+
scale_color_viridis_c(option = "plasma")+
labs(col = "M Eccentricity")+
scale_x_continuous(breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),
labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))+
scale_y_continuous(breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),
labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))
pfig3 <- pfig3 + facet_wrap(pop ~., labeller = as_labeller(netw_names),  ncol=3) +
theme_bw()+ theme(plot.margin = unit(c(3.3, 0, 0, 0), "cm")) #, strip.text = element_blank()
pfig3
png.netw1 = readPNG('../../templates/fig_3/networks.png')
cairo_pdf("../../figures/fig_3.pdf", width=10, height=5.8)
grid.arrange(
pfig3,
ncol = 1,
nrow = 1,
widths = c(1),
clip = FALSE
)
grid.raster(png.netw1, x=0.46, y=0.86, width=0.68)
dev.off()
netw_names <- as_labeller(c(
`1-full_-0.5_fixed` = "a-b regulations fixed at -0.5",
`3-full_0_fixed` = "a-b regulations fixed at 0",
`2-full_0.5_fixed` = "a-b regulations fixed at 0.5"
))
#With eccentricity
pfig3 <- ggplot(data=df.fig3, aes(ang_S, ang_M))+
coord_fixed(ratio = 1, xlim = c(-1.5,1.5), ylim = c(-pi/2-0.2,pi/2+0.2), expand = TRUE, clip = "on")+
geom_abline(colour="#666666")+
geom_abline(intercept=pi, colour="#666666")+
geom_abline(intercept=-pi, colour="#666666")+
geom_point(aes(y=ang_M, col=ecc_M), alpha=0.2, show.legend = FALSE)+
geom_point(aes(y=ang_M_mpi, col=ecc_M), alpha=0.2, show.legend = FALSE)+
geom_point(aes(y=ang_M_ppi, col=ecc_M), alpha=0.2, show.legend = TRUE)+
labs(y=expression(paste(alpha, "M")), x=expression(paste(alpha, "S")), fill = expression("\u03BE\u03B1"))+
scale_color_viridis_c(option = "plasma")+
labs(col = "M Eccentricity")+
scale_x_continuous(breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),
labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))+
scale_y_continuous(breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),
labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))
pfig3 <- pfig3 + facet_wrap(pop ~., labeller = as_labeller(netw_names),  ncol=3) +
theme_bw()+ theme(plot.margin = unit(c(3.3, 0, 0, 0), "cm")) #, strip.text = element_blank()
pfig3
png.netw1 = readPNG('../../templates/fig_3/networks.png')
cairo_pdf("../../figures/fig_3.pdf", width=10, height=5.8)
grid.arrange(
pfig3,
ncol = 1,
nrow = 1,
widths = c(1),
clip = FALSE
)
grid.raster(png.netw1, x=0.46, y=0.86, width=0.68)
dev.off()
source("~/Work/Mmatrix_paper/scripts/functions_R/All_functions.R")
source("../functions_R/All_functions.R")
library(plsdepot)
#######################
sims.dirs <- c("../../simul/fig_2/2-full")
#######################
df.topo <- df.data(sims.dirs, pattern = "../../simul/fig_2/", variable="netw", file_size=220000, w_of_6=TRUE, network=TRUE)
dfx <- df.topo[,10:45]
dfy <- as.data.frame(df.topo$ang_M)
df <-as.data.frame(cbind(dfx,dfy))
df[] <- lapply( df, as.numeric)
df <- df.topo[,10:45]
df$alphaM <- df.topo$ang_M
df[] <- lapply( df, as.numeric)
pls1 = plsreg1( df[,c(2:7, 9:14, 16:21, 23:28, 30:35)], df[,37, drop = FALSE], comps = 2)
summary(pls1)
pls1$cor.xyt
# pdf("../../figures/PLS.pdf", width=7, height=7)
pdf("../../figures/PLS.pdf", width=6, height=6)
plot(pls1, what="variables", main = "", xlab = "Latent variable 1", ylab = "Latent variable 2")
dev.off()
netw_names <- as_labeller(c(
`1-full_-0.5_fixed` = "a-b regulations fixed at -0.5",
`3-full_0_fixed` = "a-b regulations fixed at 0",
`2-full_0.5_fixed` = "a-b regulations fixed at 0.5"
))
#With eccentricity
pfig3 <- ggplot(data=df.fig3, aes(ang_S, ang_M))+
coord_fixed(ratio = 1, xlim = c(-1.5,1.5), ylim = c(-pi/2-0.2,pi/2+0.2), expand = TRUE, clip = "on")+
geom_abline(colour="#666666")+
geom_abline(intercept=pi, colour="#666666")+
geom_abline(intercept=-pi, colour="#666666")+
geom_point(aes(y=ang_M, col=ecc_M), alpha=0.2, show.legend = FALSE)+
geom_point(aes(y=ang_M_mpi, col=ecc_M), alpha=0.2, show.legend = FALSE)+
geom_point(aes(y=ang_M_ppi, col=ecc_M), alpha=0.2, show.legend = TRUE)+
labs(y=expression(paste(alpha, "M")), x=expression(paste(alpha, "S")), fill = expression("\u03BE\u03B1"))+
scale_color_viridis_c(option = "plasma")+
labs(col = "M Eccentricity")+
scale_x_continuous(breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),
labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))+
scale_y_continuous(breaks=c(0, pi/4, pi/2, -pi/4, -pi/2),
labels=c("0", "\u03c0/4", "\u03c0/2","-\u03c0/4", "-\u03c0/2"))
pfig3 <- pfig3 + facet_wrap(pop ~., labeller = as_labeller(netw_names),  ncol=3) +
theme_bw()+ theme(plot.margin = unit(c(3.3, 0, 0, 0), "cm")) #, strip.text = element_blank()
pfig3
png.netw1 = readPNG('../../templates/fig_3/networks.png')
cairo_pdf("../../figures/fig_3.pdf", width=10, height=5.8)
grid.arrange(
pfig3,
ncol = 1,
nrow = 1,
widths = c(1),
clip = FALSE
)
grid.raster(png.netw1, x=0.46, y=0.86, width=0.68)
dev.off()
library(png)
library(igraph)
#####################
sims.dirs <-  list.dirs("../../simul/fig_4", recursive = FALSE)
#####################
df.fig4 <- df.data(sims.dirs, pattern = "../../simul/fig_4/", variable="netw", file_size=15000, w_of_6=TRUE, network=TRUE)
library(ggstatsplot)
library(tidyverse)
plt <- ggbetweenstats(
data = df.fig4,
x = pop,
y = corr,
centrality.plotting=FALSE,
plot.type = "box",
ggtheme = ggplot2::theme_bw()+theme(plot.margin = unit(c(0, 0, 3.3, 0), "cm")),
ggplot.component = scale_x_discrete(labels = c('Full Network','Direct only','1 intermediate','2 intermediate','3 intermediate')),
pairwise.comparisons=FALSE,
bf.message=FALSE,
results.subtitle=FALSE,
xlab="", ylab="Mutational correlation (rM)",
title = NULL
)
plt
png.netw1 = readPNG('../../templates/fig_4/networks_fig4.png')
cairo_pdf("../../figures/fig_distances.pdf", width=7, height=5.8)
grid.arrange(
plt,
ncol = 1,
nrow = 1,
widths = c(1),
clip = FALSE
)
grid.raster(png.netw1, x=0.54, y=0.13, width=0.9)
dev.off()
library(ggstatsplot)
library(tidyverse)
plt <- ggbetweenstats(
data = df.fig4,
x = pop,
y = corr,
centrality.plotting=FALSE,
plot.type = "box",
ggtheme = ggplot2::theme_bw()+theme(plot.margin = unit(c(0, 0, 3.1, 0), "cm")),
ggplot.component = scale_x_discrete(labels = c('Full Network','Direct only','1 intermediate','2 intermediate','3 intermediate')),
pairwise.comparisons=FALSE,
bf.message=FALSE,
results.subtitle=FALSE,
xlab="", ylab="Mutational correlation (rM)",
title = NULL
)
plt
png.netw1 = readPNG('../../templates/fig_4/networks_fig4.png')
cairo_pdf("../../figures/fig_distances.pdf", width=7, height=5.8)
grid.arrange(
plt,
ncol = 1,
nrow = 1,
widths = c(1),
clip = FALSE
)
grid.raster(png.netw1, x=0.58, y=0.13, width=0.93)
dev.off()
png.netw1 = readPNG('../../templates/fig_4/networks_fig4.png')
cairo_pdf("../../figures/fig_distances.pdf", width=7, height=5.8)
grid.arrange(
plt,
ncol = 1,
nrow = 1,
widths = c(1),
clip = FALSE
)
grid.raster(png.netw1, x=0.54, y=0.13, width=0.95)
dev.off()
library(ggstatsplot)
library(tidyverse)
plt <- ggbetweenstats(
data = df.fig4,
x = pop,
y = corr,
centrality.plotting=FALSE,
plot.type = "box",
ggtheme = ggplot2::theme_bw()+theme(plot.margin = unit(c(0, 0, 3, 0), "cm")),
ggplot.component = scale_x_discrete(labels = c('Full Network','Direct only','1 intermediate','2 intermediate','3 intermediate')),
pairwise.comparisons=FALSE,
bf.message=FALSE,
results.subtitle=FALSE,
xlab="", ylab="Mutational correlation (rM)",
title = NULL
)
plt
png.netw1 = readPNG('../../templates/fig_4/networks_fig4.png')
cairo_pdf("../../figures/fig_distances.pdf", width=7, height=5.8)
grid.arrange(
plt,
ncol = 1,
nrow = 1,
widths = c(1),
clip = FALSE
)
grid.raster(png.netw1, x=0.54, y=0.13, width=0.95)
dev.off()
library(ggstatsplot)
library(tidyverse)
plt <- ggbetweenstats(
data = df.fig4,
x = pop,
y = corr,
centrality.plotting=FALSE,
plot.type = "box",
ggtheme = ggplot2::theme_bw()+theme(plot.margin = unit(c(0, 0, 3, 0), "cm")),
ggplot.component = scale_x_discrete(labels = c('Full Network','Direct only','1 intermediate','2 intermediate','3 intermediate')),
pairwise.comparisons=FALSE,
bf.message=FALSE,
results.subtitle=FALSE,
xlab=" ", ylab="Mutational correlation (rM)",
title = NULL
)
plt
png.netw1 = readPNG('../../templates/fig_4/networks_fig4.png')
cairo_pdf("../../figures/fig_distances.pdf", width=7, height=5.8)
grid.arrange(
plt,
ncol = 1,
nrow = 1,
widths = c(1),
clip = FALSE
)
grid.raster(png.netw1, x=0.54, y=0.13, width=0.95)
dev.off()
library(ggstatsplot)
library(tidyverse)
plt <- ggbetweenstats(
data = df.fig4,
x = pop,
y = corr,
centrality.plotting=FALSE,
plot.type = "box",
ggtheme = ggplot2::theme_bw()+theme(plot.margin = unit(c(0.1, 0, 3, 0), "cm")),
ggplot.component = scale_x_discrete(labels = c('Full Network','Direct only','1 intermediate','2 intermediate','3 intermediate')),
pairwise.comparisons=FALSE,
bf.message=FALSE,
results.subtitle=FALSE,
xlab=" ", ylab="Mutational correlation (rM)",
title = NULL
)
plt
png.netw1 = readPNG('../../templates/fig_4/networks_fig4.png')
cairo_pdf("../../figures/fig_distances.pdf", width=7, height=5.8)
grid.arrange(
plt,
ncol = 1,
nrow = 1,
widths = c(1),
clip = FALSE
)
grid.raster(png.netw1, x=0.54, y=0.13, width=0.95)
dev.off()
source("../functions_R/All_functions.R")
#########################################
angle = c(0, 0.393, 0.785, 1.178)
#####################
M.factor <- 1
S.factor <- 1/1500
laymat <- matrix(seq(1,12, by=1), nrow = 3, ncol = 4)
par(mar=c(0.1,0.1,0.1,0.1), oma=c(10, 0, 0, 0))
layout(mat = laymat) # Widths of the two columns
for (i in angle) {
oneplot.allellipse(sprintf("../../simul/fig_1/m/simuangle%s.parangle%s.par", i,i), S.factor=S.factor, M.factor=M.factor, Sell=TRUE, Mell=FALSE,
xlim=c(-0.2,0.2), ylim=c(-0.2,0.2), all.reps=FALSE, xlab="", ylab="",
yaxt = "n", xaxt = "n", legend=legend, asp=1, axes = FALSE,mgp = c(0, 0, 0))
oneplot.allellipse(sprintf("../../simul/fig_1/m/simuangle%s.parangle%s.par", i,i), S.factor=S.factor, M.factor=M.factor, Sell=FALSE, Mell=TRUE,
xlim=c(-0.2,0.2), ylim=c(-0.2,0.2), all.reps=FALSE, xlab="", ylab="",
yaxt = "n", xaxt = "n", legend=legend, asp=1, axes = FALSE,mgp = c(0, 0, 0))
oneplot.allellipse(sprintf("../../simul/fig_1/w/simuangle%s.parangle%s.par", i,i), S.factor=S.factor, M.factor=M.factor, Sell=FALSE, Mell=TRUE,
xlim=c(-0.2,0.2), ylim=c(-0.2,0.2), all.reps=FALSE, xlab="", ylab="",
yaxt = "n", xaxt = "n", legend=legend, asp=1, axes = FALSE,mgp = c(0, 0, 0))
}
#########################################
angle = c(0, 0.393, 0.785, 1.178)
#####################
M.factor <- 1
S.factor <- 1/1500
laymat <- matrix(seq(1,12, by=1), nrow = 3, ncol = 4)
par(mar=c(0.1,0.1,0.1,0.1), oma=c(10, 0, 0, 0))
layout(mat = laymat) # Widths of the two columns
cairo_pdf("../../figures/fig1_f.pdf", width=4.5, height=4)
for (i in angle) {
oneplot.allellipse(sprintf("../../simul/fig_1/m/simuangle%s.parangle%s.par", i,i), S.factor=S.factor, M.factor=M.factor, Sell=TRUE, Mell=FALSE,
xlim=c(-0.2,0.2), ylim=c(-0.2,0.2), all.reps=FALSE, xlab="", ylab="",
yaxt = "n", xaxt = "n", legend=legend, asp=1, axes = FALSE,mgp = c(0, 0, 0))
oneplot.allellipse(sprintf("../../simul/fig_1/m/simuangle%s.parangle%s.par", i,i), S.factor=S.factor, M.factor=M.factor, Sell=FALSE, Mell=TRUE,
xlim=c(-0.2,0.2), ylim=c(-0.2,0.2), all.reps=FALSE, xlab="", ylab="",
yaxt = "n", xaxt = "n", legend=legend, asp=1, axes = FALSE,mgp = c(0, 0, 0))
oneplot.allellipse(sprintf("../../simul/fig_1/w/simuangle%s.parangle%s.par", i,i), S.factor=S.factor, M.factor=M.factor, Sell=FALSE, Mell=TRUE,
xlim=c(-0.2,0.2), ylim=c(-0.2,0.2), all.reps=FALSE, xlab="", ylab="",
yaxt = "n", xaxt = "n", legend=legend, asp=1, axes = FALSE,mgp = c(0, 0, 0))
}
dev.off()
cairo_pdf("../../figures/fig1_f.pdf", width=4.5, height=4)
for (i in angle) {
layout(mat = laymat) # Widths of the two columns
oneplot.allellipse(sprintf("../../simul/fig_1/m/simuangle%s.parangle%s.par", i,i), S.factor=S.factor, M.factor=M.factor, Sell=TRUE, Mell=FALSE,
xlim=c(-0.2,0.2), ylim=c(-0.2,0.2), all.reps=FALSE, xlab="", ylab="",
yaxt = "n", xaxt = "n", legend=legend, asp=1, axes = FALSE,mgp = c(0, 0, 0))
oneplot.allellipse(sprintf("../../simul/fig_1/m/simuangle%s.parangle%s.par", i,i), S.factor=S.factor, M.factor=M.factor, Sell=FALSE, Mell=TRUE,
xlim=c(-0.2,0.2), ylim=c(-0.2,0.2), all.reps=FALSE, xlab="", ylab="",
yaxt = "n", xaxt = "n", legend=legend, asp=1, axes = FALSE,mgp = c(0, 0, 0))
oneplot.allellipse(sprintf("../../simul/fig_1/w/simuangle%s.parangle%s.par", i,i), S.factor=S.factor, M.factor=M.factor, Sell=FALSE, Mell=TRUE,
xlim=c(-0.2,0.2), ylim=c(-0.2,0.2), all.reps=FALSE, xlab="", ylab="",
yaxt = "n", xaxt = "n", legend=legend, asp=1, axes = FALSE,mgp = c(0, 0, 0))
}
dev.off()
cairo_pdf("../../figures/fig1_f.pdf", width=4.5, height=4)
for (i in angle) {
laymat <- matrix(seq(1,12, by=1), nrow = 3, ncol = 4)
par(mar=c(0.1,0.1,0.1,0.1), oma=c(0, 0, 0, 0))
layout(mat = laymat) # Widths of the two columns
oneplot.allellipse(sprintf("../../simul/fig_1/m/simuangle%s.parangle%s.par", i,i), S.factor=S.factor, M.factor=M.factor, Sell=TRUE, Mell=FALSE,
xlim=c(-0.2,0.2), ylim=c(-0.2,0.2), all.reps=FALSE, xlab="", ylab="",
yaxt = "n", xaxt = "n", legend=legend, asp=1, axes = FALSE,mgp = c(0, 0, 0))
oneplot.allellipse(sprintf("../../simul/fig_1/m/simuangle%s.parangle%s.par", i,i), S.factor=S.factor, M.factor=M.factor, Sell=FALSE, Mell=TRUE,
xlim=c(-0.2,0.2), ylim=c(-0.2,0.2), all.reps=FALSE, xlab="", ylab="",
yaxt = "n", xaxt = "n", legend=legend, asp=1, axes = FALSE,mgp = c(0, 0, 0))
oneplot.allellipse(sprintf("../../simul/fig_1/w/simuangle%s.parangle%s.par", i,i), S.factor=S.factor, M.factor=M.factor, Sell=FALSE, Mell=TRUE,
xlim=c(-0.2,0.2), ylim=c(-0.2,0.2), all.reps=FALSE, xlab="", ylab="",
yaxt = "n", xaxt = "n", legend=legend, asp=1, axes = FALSE,mgp = c(0, 0, 0))
}
dev.off()
cairo_pdf("../../figures/fig1_f.pdf", width=4.5, height=4)
laymat <- matrix(seq(1,12, by=1), nrow = 3, ncol = 4)
par(mar=c(0.1,0.1,0.1,0.1), oma=c(0, 0, 0, 0))
layout(mat = laymat) # Widths of the two columns
for (i in angle) {
oneplot.allellipse(sprintf("../../simul/fig_1/m/simuangle%s.parangle%s.par", i,i), S.factor=S.factor, M.factor=M.factor, Sell=TRUE, Mell=FALSE,
xlim=c(-0.2,0.2), ylim=c(-0.2,0.2), all.reps=FALSE, xlab="", ylab="",
yaxt = "n", xaxt = "n", legend=legend, asp=1, axes = FALSE,mgp = c(0, 0, 0))
oneplot.allellipse(sprintf("../../simul/fig_1/m/simuangle%s.parangle%s.par", i,i), S.factor=S.factor, M.factor=M.factor, Sell=FALSE, Mell=TRUE,
xlim=c(-0.2,0.2), ylim=c(-0.2,0.2), all.reps=FALSE, xlab="", ylab="",
yaxt = "n", xaxt = "n", legend=legend, asp=1, axes = FALSE,mgp = c(0, 0, 0))
oneplot.allellipse(sprintf("../../simul/fig_1/w/simuangle%s.parangle%s.par", i,i), S.factor=S.factor, M.factor=M.factor, Sell=FALSE, Mell=TRUE,
xlim=c(-0.2,0.2), ylim=c(-0.2,0.2), all.reps=FALSE, xlab="", ylab="",
yaxt = "n", xaxt = "n", legend=legend, asp=1, axes = FALSE,mgp = c(0, 0, 0))
}
dev.off()
cairo_pdf("../../figures/fig1_f.pdf", width=4.5, height=3)
laymat <- matrix(seq(1,12, by=1), nrow = 3, ncol = 4)
par(mar=c(0.1,0.1,0.1,0.1), oma=c(0, 0, 0, 0))
layout(mat = laymat) # Widths of the two columns
for (i in angle) {
oneplot.allellipse(sprintf("../../simul/fig_1/m/simuangle%s.parangle%s.par", i,i), S.factor=S.factor, M.factor=M.factor, Sell=TRUE, Mell=FALSE,
xlim=c(-0.2,0.2), ylim=c(-0.2,0.2), all.reps=FALSE, xlab="", ylab="",
yaxt = "n", xaxt = "n", legend=legend, asp=1, axes = FALSE,mgp = c(0, 0, 0))
oneplot.allellipse(sprintf("../../simul/fig_1/m/simuangle%s.parangle%s.par", i,i), S.factor=S.factor, M.factor=M.factor, Sell=FALSE, Mell=TRUE,
xlim=c(-0.2,0.2), ylim=c(-0.2,0.2), all.reps=FALSE, xlab="", ylab="",
yaxt = "n", xaxt = "n", legend=legend, asp=1, axes = FALSE,mgp = c(0, 0, 0))
oneplot.allellipse(sprintf("../../simul/fig_1/w/simuangle%s.parangle%s.par", i,i), S.factor=S.factor, M.factor=M.factor, Sell=FALSE, Mell=TRUE,
xlim=c(-0.2,0.2), ylim=c(-0.2,0.2), all.reps=FALSE, xlab="", ylab="",
yaxt = "n", xaxt = "n", legend=legend, asp=1, axes = FALSE,mgp = c(0, 0, 0))
}
dev.off()
cairo_pdf("../../figures/fig1_f.pdf", width=4.5, height=2.6)
laymat <- matrix(seq(1,12, by=1), nrow = 3, ncol = 4)
par(mar=c(0.1,0.1,0.1,0.1), oma=c(0, 0, 0, 0))
layout(mat = laymat) # Widths of the two columns
for (i in angle) {
oneplot.allellipse(sprintf("../../simul/fig_1/m/simuangle%s.parangle%s.par", i,i), S.factor=S.factor, M.factor=M.factor, Sell=TRUE, Mell=FALSE,
xlim=c(-0.2,0.2), ylim=c(-0.2,0.2), all.reps=FALSE, xlab="", ylab="",
yaxt = "n", xaxt = "n", legend=legend, asp=1, axes = FALSE,mgp = c(0, 0, 0))
oneplot.allellipse(sprintf("../../simul/fig_1/m/simuangle%s.parangle%s.par", i,i), S.factor=S.factor, M.factor=M.factor, Sell=FALSE, Mell=TRUE,
xlim=c(-0.2,0.2), ylim=c(-0.2,0.2), all.reps=FALSE, xlab="", ylab="",
yaxt = "n", xaxt = "n", legend=legend, asp=1, axes = FALSE,mgp = c(0, 0, 0))
oneplot.allellipse(sprintf("../../simul/fig_1/w/simuangle%s.parangle%s.par", i,i), S.factor=S.factor, M.factor=M.factor, Sell=FALSE, Mell=TRUE,
xlim=c(-0.2,0.2), ylim=c(-0.2,0.2), all.reps=FALSE, xlab="", ylab="",
yaxt = "n", xaxt = "n", legend=legend, asp=1, axes = FALSE,mgp = c(0, 0, 0))
}
dev.off()
cairo_pdf("../../figures/fig1_f.pdf", width=4.5, height=2)
laymat <- matrix(seq(1,12, by=1), nrow = 3, ncol = 4)
par(mar=c(0.1,0.1,0.1,0.1), oma=c(0, 0, 0, 0))
layout(mat = laymat) # Widths of the two columns
for (i in angle) {
oneplot.allellipse(sprintf("../../simul/fig_1/m/simuangle%s.parangle%s.par", i,i), S.factor=S.factor, M.factor=M.factor, Sell=TRUE, Mell=FALSE,
xlim=c(-0.2,0.2), ylim=c(-0.2,0.2), all.reps=FALSE, xlab="", ylab="",
yaxt = "n", xaxt = "n", legend=legend, asp=1, axes = FALSE,mgp = c(0, 0, 0))
oneplot.allellipse(sprintf("../../simul/fig_1/m/simuangle%s.parangle%s.par", i,i), S.factor=S.factor, M.factor=M.factor, Sell=FALSE, Mell=TRUE,
xlim=c(-0.2,0.2), ylim=c(-0.2,0.2), all.reps=FALSE, xlab="", ylab="",
yaxt = "n", xaxt = "n", legend=legend, asp=1, axes = FALSE,mgp = c(0, 0, 0))
oneplot.allellipse(sprintf("../../simul/fig_1/w/simuangle%s.parangle%s.par", i,i), S.factor=S.factor, M.factor=M.factor, Sell=FALSE, Mell=TRUE,
xlim=c(-0.2,0.2), ylim=c(-0.2,0.2), all.reps=FALSE, xlab="", ylab="",
yaxt = "n", xaxt = "n", legend=legend, asp=1, axes = FALSE,mgp = c(0, 0, 0))
}
dev.off()
cairo_pdf("../../figures/fig1_f.pdf", width=4, height=2.6)
laymat <- matrix(seq(1,12, by=1), nrow = 3, ncol = 4)
par(mar=c(0.1,0.1,0.1,0.1), oma=c(0, 0, 0, 0))
layout(mat = laymat) # Widths of the two columns
for (i in angle) {
oneplot.allellipse(sprintf("../../simul/fig_1/m/simuangle%s.parangle%s.par", i,i), S.factor=S.factor, M.factor=M.factor, Sell=TRUE, Mell=FALSE,
xlim=c(-0.2,0.2), ylim=c(-0.2,0.2), all.reps=FALSE, xlab="", ylab="",
yaxt = "n", xaxt = "n", legend=legend, asp=1, axes = FALSE,mgp = c(0, 0, 0))
oneplot.allellipse(sprintf("../../simul/fig_1/m/simuangle%s.parangle%s.par", i,i), S.factor=S.factor, M.factor=M.factor, Sell=FALSE, Mell=TRUE,
xlim=c(-0.2,0.2), ylim=c(-0.2,0.2), all.reps=FALSE, xlab="", ylab="",
yaxt = "n", xaxt = "n", legend=legend, asp=1, axes = FALSE,mgp = c(0, 0, 0))
oneplot.allellipse(sprintf("../../simul/fig_1/w/simuangle%s.parangle%s.par", i,i), S.factor=S.factor, M.factor=M.factor, Sell=FALSE, Mell=TRUE,
xlim=c(-0.2,0.2), ylim=c(-0.2,0.2), all.reps=FALSE, xlab="", ylab="",
yaxt = "n", xaxt = "n", legend=legend, asp=1, axes = FALSE,mgp = c(0, 0, 0))
}
dev.off()
cairo_pdf("../../figures/fig1_f.pdf", width=3.5, height=2.6)
laymat <- matrix(seq(1,12, by=1), nrow = 3, ncol = 4)
par(mar=c(0.1,0.1,0.1,0.1), oma=c(0, 0, 0, 0))
layout(mat = laymat) # Widths of the two columns
for (i in angle) {
oneplot.allellipse(sprintf("../../simul/fig_1/m/simuangle%s.parangle%s.par", i,i), S.factor=S.factor, M.factor=M.factor, Sell=TRUE, Mell=FALSE,
xlim=c(-0.2,0.2), ylim=c(-0.2,0.2), all.reps=FALSE, xlab="", ylab="",
yaxt = "n", xaxt = "n", legend=legend, asp=1, axes = FALSE,mgp = c(0, 0, 0))
oneplot.allellipse(sprintf("../../simul/fig_1/m/simuangle%s.parangle%s.par", i,i), S.factor=S.factor, M.factor=M.factor, Sell=FALSE, Mell=TRUE,
xlim=c(-0.2,0.2), ylim=c(-0.2,0.2), all.reps=FALSE, xlab="", ylab="",
yaxt = "n", xaxt = "n", legend=legend, asp=1, axes = FALSE,mgp = c(0, 0, 0))
oneplot.allellipse(sprintf("../../simul/fig_1/w/simuangle%s.parangle%s.par", i,i), S.factor=S.factor, M.factor=M.factor, Sell=FALSE, Mell=TRUE,
xlim=c(-0.2,0.2), ylim=c(-0.2,0.2), all.reps=FALSE, xlab="", ylab="",
yaxt = "n", xaxt = "n", legend=legend, asp=1, axes = FALSE,mgp = c(0, 0, 0))
}
dev.off()
